{
  "version": 3,
  "sources": ["node:url", "../node_modules/@grame/faustwasm/dist/esm/index.js", "../src/faust/worker/faust.worker.ts"],
  "sourcesContent": [
    "var{URL:J,URLSearchParams:X}=globalThis;function F(s){return typeof s==\"string\"}function K(s){return typeof s==\"object\"&&s!==null}function w(s){return s===null}function Y(s){return s==null}function m(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var S=/^([a-z0-9.+-]+:)/i,k=/:[0-9]*$/,H=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,Q=[\"<\",\">\",'\"',\"`\",\" \",\"\\r\",`\n`,\"\t\"],E=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat(Q),N=[\"'\"].concat(E),M=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(N),D=[\"/\",\"?\",\"#\"],tt=255,G=/^[+a-z0-9A-Z_-]{0,63}$/,st=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,ht={javascript:!0,\"javascript:\":!0},Z={javascript:!0,\"javascript:\":!0},j={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,\"http:\":!0,\"https:\":!0,\"ftp:\":!0,\"gopher:\":!0,\"file:\":!0},B={parse(s){var r=decodeURIComponent;return(s+\"\").replace(/\\+/g,\" \").split(\"&\").filter(Boolean).reduce(function(t,a,o){var l=a.split(\"=\"),f=r(l[0]||\"\"),h=r(l[1]||\"\"),g=t[f];return t[f]=g===void 0?h:[].concat(g,h),t},{})},stringify(s){var r=encodeURIComponent;return Object.keys(s||{}).reduce(function(t,a){return[].concat(s[a]).forEach(function(o){t.push(r(a)+\"=\"+r(o))}),t},[]).join(\"&\").replace(/\\s/g,\"+\")}};function I(s,r,t){if(s&&K(s)&&s instanceof m)return s;var a=new m;return a.parse(s,r,t),a}m.prototype.parse=function(s,r,t){if(!F(s))throw new TypeError(\"Parameter 'url' must be a string, not \"+typeof s);var a=s.indexOf(\"?\"),o=a!==-1&&a<s.indexOf(\"#\")?\"?\":\"#\",l=s.split(o),f=/\\\\/g;l[0]=l[0].replace(f,\"/\"),s=l.join(o);var h=s;if(h=h.trim(),!t&&s.split(\"#\").length===1){var g=H.exec(h);if(g)return this.path=h,this.href=h,this.pathname=g[1],g[2]?(this.search=g[2],r?this.query=B.parse(this.search.substr(1)):this.query=this.search.substr(1)):r&&(this.search=\"\",this.query={}),this}var c=S.exec(h);if(c){c=c[0];var v=c.toLowerCase();this.protocol=v,h=h.substr(c.length)}if(t||c||h.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){var U=h.substr(0,2)===\"//\";U&&!(c&&Z[c])&&(h=h.substr(2),this.slashes=!0)}if(!Z[c]&&(U||c&&!j[c])){for(var u=-1,n=0;n<D.length;n++){var b=h.indexOf(D[n]);b!==-1&&(u===-1||b<u)&&(u=b)}var R,p;u===-1?p=h.lastIndexOf(\"@\"):p=h.lastIndexOf(\"@\",u),p!==-1&&(R=h.slice(0,p),h=h.slice(p+1),this.auth=decodeURIComponent(R)),u=-1;for(var n=0;n<M.length;n++){var b=h.indexOf(M[n]);b!==-1&&(u===-1||b<u)&&(u=b)}u===-1&&(u=h.length),this.host=h.slice(0,u),h=h.slice(u),this.parseHost(),this.hostname=this.hostname||\"\";var C=this.hostname[0]===\"[\"&&this.hostname[this.hostname.length-1]===\"]\";if(!C)for(var e=this.hostname.split(/\\./),n=0,i=e.length;n<i;n++){var O=e[n];if(!!O&&!O.match(G)){for(var y=\"\",d=0,L=O.length;d<L;d++)O.charCodeAt(d)>127?y+=\"x\":y+=O[d];if(!y.match(G)){var x=e.slice(0,n),q=e.slice(n+1),A=O.match(st);A&&(x.push(A[1]),q.unshift(A[2])),q.length&&(h=\"/\"+q.join(\".\")+h),this.hostname=x.join(\".\");break}}}this.hostname.length>tt?this.hostname=\"\":this.hostname=this.hostname.toLowerCase(),C||(this.hostname=new J(`https://${this.hostname}`).hostname);var $=this.port?\":\"+this.port:\"\",V=this.hostname||\"\";this.host=V+$,this.href+=this.host,C&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),h[0]!==\"/\"&&(h=\"/\"+h))}if(!ht[v])for(var n=0,i=N.length;n<i;n++){var P=N[n];if(h.indexOf(P)!==-1){var z=encodeURIComponent(P);z===P&&(z=escape(P)),h=h.split(P).join(z)}}var T=h.indexOf(\"#\");T!==-1&&(this.hash=h.substr(T),h=h.slice(0,T));var _=h.indexOf(\"?\");if(_!==-1?(this.search=h.substr(_),this.query=h.substr(_+1),r&&(this.query=B.parse(this.query)),h=h.slice(0,_)):r&&(this.search=\"\",this.query={}),h&&(this.pathname=h),j[v]&&this.hostname&&!this.pathname&&(this.pathname=\"/\"),this.pathname||this.search){var $=this.pathname||\"\",W=this.search||\"\";this.path=$+W}return this.href=this.format(),this};function et(s){return F(s)&&(s=I(s)),s instanceof m?s.format():m.prototype.format.call(s)}m.prototype.format=function(){var s=this.auth||\"\";s&&(s=encodeURIComponent(s),s=s.replace(/%3A/i,\":\"),s+=\"@\");var r=this.protocol||\"\",t=this.pathname||\"\",a=this.hash||\"\",o=!1,l=\"\";this.host?o=s+this.host:this.hostname&&(o=s+(this.hostname.indexOf(\":\")===-1?this.hostname:\"[\"+this.hostname+\"]\"),this.port&&(o+=\":\"+this.port)),this.query&&K(this.query)&&Object.keys(this.query).length&&(l=B.stringify(this.query));var f=this.search||l&&\"?\"+l||\"\";return r&&r.substr(-1)!==\":\"&&(r+=\":\"),this.slashes||(!r||j[r])&&o!==!1?(o=\"//\"+(o||\"\"),t&&t.charAt(0)!==\"/\"&&(t=\"/\"+t)):o||(o=\"\"),a&&a.charAt(0)!==\"#\"&&(a=\"#\"+a),f&&f.charAt(0)!==\"?\"&&(f=\"?\"+f),t=t.replace(/[?#]/g,function(h){return encodeURIComponent(h)}),f=f.replace(\"#\",\"%23\"),r+o+t+f+a};function rt(s,r){return I(s,!1,!0).resolve(r)}m.prototype.resolve=function(s){return this.resolveObject(I(s,!1,!0)).format()};function at(s,r){return s?I(s,!1,!0).resolveObject(r):r}m.prototype.resolveObject=function(s){if(F(s)){var r=new m;r.parse(s,!1,!0),s=r}for(var t=new m,a=Object.keys(this),o=0;o<a.length;o++){var l=a[o];t[l]=this[l]}if(t.hash=s.hash,s.href===\"\")return t.href=t.format(),t;if(s.slashes&&!s.protocol){for(var f=Object.keys(s),h=0;h<f.length;h++){var g=f[h];g!==\"protocol\"&&(t[g]=s[g])}return j[t.protocol]&&t.hostname&&!t.pathname&&(t.path=t.pathname=\"/\"),t.href=t.format(),t}if(s.protocol&&s.protocol!==t.protocol){if(!j[s.protocol]){for(var c=Object.keys(s),v=0;v<c.length;v++){var U=c[v];t[U]=s[U]}return t.href=t.format(),t}if(t.protocol=s.protocol,!s.host&&!Z[s.protocol]){for(var i=(s.pathname||\"\").split(\"/\");i.length&&!(s.host=i.shift()););s.host||(s.host=\"\"),s.hostname||(s.hostname=\"\"),i[0]!==\"\"&&i.unshift(\"\"),i.length<2&&i.unshift(\"\"),t.pathname=i.join(\"/\")}else t.pathname=s.pathname;if(t.search=s.search,t.query=s.query,t.host=s.host||\"\",t.auth=s.auth,t.hostname=s.hostname||s.host,t.port=s.port,t.pathname||t.search){var u=t.pathname||\"\",n=t.search||\"\";t.path=u+n}return t.slashes=t.slashes||s.slashes,t.href=t.format(),t}var b=t.pathname&&t.pathname.charAt(0)===\"/\",R=s.host||s.pathname&&s.pathname.charAt(0)===\"/\",p=R||b||t.host&&s.pathname,C=p,e=t.pathname&&t.pathname.split(\"/\")||[],i=s.pathname&&s.pathname.split(\"/\")||[],O=t.protocol&&!j[t.protocol];if(O&&(t.hostname=\"\",t.port=null,t.host&&(e[0]===\"\"?e[0]=t.host:e.unshift(t.host)),t.host=\"\",s.protocol&&(s.hostname=null,s.port=null,s.host&&(i[0]===\"\"?i[0]=s.host:i.unshift(s.host)),s.host=null),p=p&&(i[0]===\"\"||e[0]===\"\")),R)t.host=s.host||s.host===\"\"?s.host:t.host,t.hostname=s.hostname||s.hostname===\"\"?s.hostname:t.hostname,t.search=s.search,t.query=s.query,e=i;else if(i.length)e||(e=[]),e.pop(),e=e.concat(i),t.search=s.search,t.query=s.query;else if(!Y(s.search)){if(O){t.hostname=t.host=e.shift();var y=t.host&&t.host.indexOf(\"@\")>0?t.host.split(\"@\"):!1;y&&(t.auth=y.shift(),t.host=t.hostname=y.shift())}return t.search=s.search,t.query=s.query,(!w(t.pathname)||!w(t.search))&&(t.path=(t.pathname?t.pathname:\"\")+(t.search?t.search:\"\")),t.href=t.format(),t}if(!e.length)return t.pathname=null,t.search?t.path=\"/\"+t.search:t.path=null,t.href=t.format(),t;for(var d=e.slice(-1)[0],L=(t.host||s.host||e.length>1)&&(d===\".\"||d===\"..\")||d===\"\",x=0,q=e.length;q>=0;q--)d=e[q],d===\".\"?e.splice(q,1):d===\"..\"?(e.splice(q,1),x++):x&&(e.splice(q,1),x--);if(!p&&!C)for(;x--;x)e.unshift(\"..\");p&&e[0]!==\"\"&&(!e[0]||e[0].charAt(0)!==\"/\")&&e.unshift(\"\"),L&&e.join(\"/\").substr(-1)!==\"/\"&&e.push(\"\");var A=e[0]===\"\"||e[0]&&e[0].charAt(0)===\"/\";if(O){t.hostname=t.host=A?\"\":e.length?e.shift():\"\";var y=t.host&&t.host.indexOf(\"@\")>0?t.host.split(\"@\"):!1;y&&(t.auth=y.shift(),t.host=t.hostname=y.shift())}return p=p||t.host&&e.length,p&&!A&&e.unshift(\"\"),e.length?t.pathname=e.join(\"/\"):(t.pathname=null,t.path=null),(!w(t.pathname)||!w(t.search))&&(t.path=(t.pathname?t.pathname:\"\")+(t.search?t.search:\"\")),t.auth=s.auth||t.auth,t.slashes=t.slashes||s.slashes,t.href=t.format(),t};m.prototype.parseHost=function(){var s=this.host,r=k.exec(s);r&&(r=r[0],r!==\":\"&&(this.port=r.substr(1)),s=s.substr(0,s.length-r.length)),s&&(this.hostname=s)};var ot={parse:I,resolve:rt,resolveObject:at,format:et,Url:m,URL:J,URLSearchParams:X};export{J as URL,X as URLSearchParams,m as Url,ot as default,et as format,I as parse,rt as resolve,at as resolveObject};\n",
    "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/instantiateFaustModuleFromFile.ts\nvar instantiateFaustModuleFromFile = async (jsFile, dataFile = jsFile.replace(/c?js$/, \"data\"), wasmFile = jsFile.replace(/c?js$/, \"wasm\")) => {\n  var _a, _b;\n  let FaustModule;\n  let dataBinary;\n  let wasmBinary;\n  const jsCodeHead = /var (.+) = \\(/;\n  if (typeof window === \"object\") {\n    let jsCode = await (await fetch(jsFile)).text();\n    jsCode = `${jsCode}\nexport default ${(_a = jsCode.match(jsCodeHead)) == null ? void 0 : _a[1]};\n`;\n    const jsFileMod = URL.createObjectURL(new Blob([jsCode], { type: \"text/javascript\" }));\n    FaustModule = (await import(\n      /* webpackIgnore: true */\n      jsFileMod\n    )).default;\n    dataBinary = await (await fetch(dataFile)).arrayBuffer();\n    wasmBinary = new Uint8Array(await (await fetch(wasmFile)).arrayBuffer());\n  } else {\n    const { promises: fs } = await import(\"fs\");\n    const { pathToFileURL } = await import(\"url\");\n    let jsCode = await fs.readFile(jsFile, { encoding: \"utf-8\" });\n    jsCode = `\nimport process from \"process\";\nimport * as path from \"path\";\nimport { createRequire } from \"module\";\nimport { fileURLToPath } from \"url\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst __filename = fileURLToPath(import.meta.url);\nconst require = createRequire(import.meta.url);\n\n${jsCode}\n\nexport default ${(_b = jsCode.match(jsCodeHead)) == null ? void 0 : _b[1]};\n`;\n    const jsFileMod = jsFile.replace(/c?js$/, \"mjs\");\n    await fs.writeFile(jsFileMod, jsCode);\n    FaustModule = (await import(\n      /* webpackIgnore: true */\n      pathToFileURL(jsFileMod).href\n    )).default;\n    await fs.unlink(jsFileMod);\n    dataBinary = (await fs.readFile(dataFile)).buffer;\n    wasmBinary = (await fs.readFile(wasmFile)).buffer;\n  }\n  const faustModule = await FaustModule({\n    wasmBinary,\n    getPreloadedPackage: (remotePackageName, remotePackageSize) => {\n      if (remotePackageName === \"libfaust-wasm.data\")\n        return dataBinary;\n      return new ArrayBuffer(0);\n    }\n  });\n  return faustModule;\n};\nvar instantiateFaustModuleFromFile_default = instantiateFaustModuleFromFile;\n\n// src/FaustAudioWorkletProcessor.ts\nvar getFaustAudioWorkletProcessor = (dependencies, faustData, register = true) => {\n  const { registerProcessor, AudioWorkletProcessor, sampleRate } = globalThis;\n  const {\n    FaustBaseWebAudioDsp: FaustBaseWebAudioDsp2,\n    FaustWasmInstantiator: FaustWasmInstantiator2\n  } = dependencies;\n  const {\n    processorName,\n    dspName,\n    dspMeta,\n    effectMeta,\n    poly\n  } = faustData;\n  const analysePolyParameters = (item) => {\n    const polyKeywords = [\"/gate\", \"/freq\", \"/gain\", \"/key\", \"/vel\", \"/velocity\"];\n    const isPolyReserved = \"address\" in item && !!polyKeywords.find((k) => item.address.endsWith(k));\n    if (poly && isPolyReserved)\n      return null;\n    if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"nentry\") {\n      return { name: item.address, defaultValue: item.init || 0, minValue: item.min || 0, maxValue: item.max || 0 };\n    } else if (item.type === \"button\" || item.type === \"checkbox\") {\n      return { name: item.address, defaultValue: item.init || 0, minValue: 0, maxValue: 1 };\n    }\n    return null;\n  };\n  class FaustAudioWorkletProcessor extends AudioWorkletProcessor {\n    constructor(options) {\n      super(options);\n      this.paramValuesCache = {};\n      this.port.onmessage = (e) => this.handleMessageAux(e);\n      const { parameterDescriptors } = this.constructor;\n      parameterDescriptors.forEach((pd) => {\n        this.paramValuesCache[pd.name] = pd.defaultValue || 0;\n      });\n      const { moduleId, instanceId } = options.processorOptions;\n      if (!moduleId || !instanceId)\n        return;\n      this.wamInfo = { moduleId, instanceId };\n    }\n    static get parameterDescriptors() {\n      const params = [];\n      const callback = (item) => {\n        const param = analysePolyParameters(item);\n        if (param)\n          params.push(param);\n      };\n      FaustBaseWebAudioDsp2.parseUI(dspMeta.ui, callback);\n      if (effectMeta)\n        FaustBaseWebAudioDsp2.parseUI(effectMeta.ui, callback);\n      return params;\n    }\n    setupWamEventHandler() {\n      var _a;\n      if (!this.wamInfo)\n        return;\n      const { moduleId, instanceId } = this.wamInfo;\n      const { webAudioModules } = globalThis;\n      const ModuleScope = webAudioModules.getModuleScope(moduleId);\n      const paramMgrProcessor = (_a = ModuleScope == null ? void 0 : ModuleScope.paramMgrProcessors) == null ? void 0 : _a[instanceId];\n      if (!paramMgrProcessor)\n        return;\n      if (paramMgrProcessor.handleEvent)\n        return;\n      paramMgrProcessor.handleEvent = (event) => {\n        if (event.type === \"wam-midi\")\n          this.midiMessage(event.data.bytes);\n      };\n    }\n    process(inputs, outputs, parameters) {\n      for (const path in parameters) {\n        const [paramValue] = parameters[path];\n        if (paramValue !== this.paramValuesCache[path]) {\n          this.fDSPCode.setParamValue(path, paramValue);\n          this.paramValuesCache[path] = paramValue;\n        }\n      }\n      return this.fDSPCode.compute(inputs[0], outputs[0]);\n    }\n    handleMessageAux(e) {\n      const msg = e.data;\n      switch (msg.type) {\n        case \"acc\": {\n          this.propagateAcc(msg.data, msg.invert);\n          break;\n        }\n        case \"gyr\": {\n          this.propagateGyr(msg.data);\n          break;\n        }\n        case \"midi\": {\n          this.midiMessage(msg.data);\n          break;\n        }\n        case \"ctrlChange\": {\n          this.ctrlChange(msg.data[0], msg.data[1], msg.data[2]);\n          break;\n        }\n        case \"pitchWheel\": {\n          this.pitchWheel(msg.data[0], msg.data[1]);\n          break;\n        }\n        case \"param\": {\n          this.setParamValue(msg.data.path, msg.data.value);\n          break;\n        }\n        case \"setPlotHandler\": {\n          if (msg.data) {\n            this.fDSPCode.setPlotHandler((output, index, events) => this.port.postMessage({ type: \"plot\", value: output, index, events }));\n          } else {\n            this.fDSPCode.setPlotHandler(null);\n          }\n          break;\n        }\n        case \"setupWamEventHandler\": {\n          this.setupWamEventHandler();\n          break;\n        }\n        case \"start\": {\n          this.fDSPCode.start();\n          break;\n        }\n        case \"stop\": {\n          this.fDSPCode.stop();\n          break;\n        }\n        case \"destroy\": {\n          this.port.close();\n          this.fDSPCode.destroy();\n          break;\n        }\n        default:\n          break;\n      }\n    }\n    setParamValue(path, value) {\n      this.fDSPCode.setParamValue(path, value);\n      this.paramValuesCache[path] = value;\n    }\n    midiMessage(data) {\n      this.fDSPCode.midiMessage(data);\n    }\n    ctrlChange(channel, ctrl, value) {\n      this.fDSPCode.ctrlChange(channel, ctrl, value);\n    }\n    pitchWheel(channel, wheel) {\n      this.fDSPCode.pitchWheel(channel, wheel);\n    }\n    propagateAcc(accelerationIncludingGravity, invert = false) {\n      this.fDSPCode.propagateAcc(accelerationIncludingGravity, invert);\n    }\n    propagateGyr(event) {\n      this.fDSPCode.propagateGyr(event);\n    }\n  }\n  class FaustMonoAudioWorkletProcessor extends FaustAudioWorkletProcessor {\n    constructor(options) {\n      super(options);\n      const { FaustMonoWebAudioDsp: FaustMonoWebAudioDsp2 } = dependencies;\n      const { factory, sampleSize } = options.processorOptions;\n      const instance = FaustWasmInstantiator2.createSyncMonoDSPInstance(factory);\n      this.fDSPCode = new FaustMonoWebAudioDsp2(instance, sampleRate, sampleSize, 128, factory.soundfiles);\n      this.fDSPCode.setOutputParamHandler((path, value) => this.port.postMessage({ path, value, type: \"param\" }));\n      this.fDSPCode.start();\n    }\n  }\n  class FaustPolyAudioWorkletProcessor extends FaustAudioWorkletProcessor {\n    constructor(options) {\n      super(options);\n      this.handleMessageAux = (e) => {\n        const msg = e.data;\n        switch (msg.type) {\n          case \"keyOn\":\n            this.keyOn(msg.data[0], msg.data[1], msg.data[2]);\n            break;\n          case \"keyOff\":\n            this.keyOff(msg.data[0], msg.data[1], msg.data[2]);\n            break;\n          default:\n            super.handleMessageAux(e);\n            break;\n        }\n      };\n      const { FaustPolyWebAudioDsp: FaustPolyWebAudioDsp3 } = dependencies;\n      const { voiceFactory, mixerModule, voices, effectFactory, sampleSize } = options.processorOptions;\n      const instance = FaustWasmInstantiator2.createSyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory);\n      const soundfiles = { ...effectFactory == null ? void 0 : effectFactory.soundfiles, ...voiceFactory.soundfiles };\n      this.fDSPCode = new FaustPolyWebAudioDsp3(instance, sampleRate, sampleSize, 128, soundfiles);\n      this.port.onmessage = (e) => this.handleMessageAux(e);\n      this.fDSPCode.setOutputParamHandler((path, value) => this.port.postMessage({ path, value, type: \"param\" }));\n      this.fDSPCode.start();\n    }\n    midiMessage(data) {\n      const cmd = data[0] >> 4;\n      const channel = data[0] & 15;\n      const data1 = data[1];\n      const data2 = data[2];\n      if (cmd === 8 || cmd === 9 && data2 === 0)\n        this.keyOff(channel, data1, data2);\n      else if (cmd === 9)\n        this.keyOn(channel, data1, data2);\n      else\n        super.midiMessage(data);\n    }\n    // Public API\n    keyOn(channel, pitch, velocity) {\n      this.fDSPCode.keyOn(channel, pitch, velocity);\n    }\n    keyOff(channel, pitch, velocity) {\n      this.fDSPCode.keyOff(channel, pitch, velocity);\n    }\n    allNotesOff(hard) {\n      this.fDSPCode.allNotesOff(hard);\n    }\n  }\n  const Processor = poly ? FaustPolyAudioWorkletProcessor : FaustMonoAudioWorkletProcessor;\n  if (register) {\n    try {\n      registerProcessor(processorName || dspName || (poly ? \"mydsp_poly\" : \"mydsp\"), Processor);\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n  return poly ? FaustPolyAudioWorkletProcessor : FaustMonoAudioWorkletProcessor;\n};\nvar FaustAudioWorkletProcessor_default = getFaustAudioWorkletProcessor;\n\n// src/FaustFFTAudioWorkletProcessor.ts\nvar getFaustFFTAudioWorkletProcessor = (dependencies, faustData, register = true) => {\n  const { registerProcessor, AudioWorkletProcessor, sampleRate } = globalThis;\n  const {\n    FaustBaseWebAudioDsp: FaustBaseWebAudioDsp2,\n    FaustWasmInstantiator: FaustWasmInstantiator2,\n    FaustMonoWebAudioDsp: FaustMonoWebAudioDsp2,\n    FFTUtils\n  } = dependencies;\n  const {\n    processorName,\n    dspName,\n    dspMeta,\n    fftOptions\n  } = faustData;\n  const {\n    windowFunctions,\n    getFFT,\n    fftToSignal,\n    signalToFFT,\n    signalToNoFFT\n  } = FFTUtils;\n  const ceil = (x, to) => Math.abs(to) < 1 ? Math.ceil(x * (1 / to)) / (1 / to) : Math.ceil(x / to) * to;\n  const mod = (x, y) => (x % y + y) % y;\n  const apply = (array, windowFunction) => {\n    for (let i = 0; i < array.length; i++) {\n      array[i] *= windowFunction(i, array.length);\n    }\n  };\n  const fftParamKeywords = [\"/fftSize\", \"/fftHopSize\", \"/fftOverlap\", \"/windowFunction\", \"/noIFFT\"];\n  const setTypedArray = (to, from, offsetTo = 0, offsetFrom = 0) => {\n    const toLength = to.length;\n    const fromLength = from.length;\n    const spillLength = Math.min(toLength, fromLength);\n    let spilled = 0;\n    let $to = mod(offsetTo, toLength) || 0;\n    let $from = mod(offsetFrom, fromLength) || 0;\n    while (spilled < spillLength) {\n      const $spillLength = Math.min(spillLength - spilled, toLength - $to, fromLength - $from);\n      const $fromEnd = $from + $spillLength;\n      if ($from === 0 && $fromEnd === fromLength)\n        to.set(from, $to);\n      else\n        to.set(from.subarray($from, $fromEnd), $to);\n      $to = ($to + $spillLength) % toLength;\n      $from = $fromEnd % fromLength;\n      spilled += $spillLength;\n    }\n    return $to;\n  };\n  const analyseParameters = (item) => {\n    const isFFTReserved = \"address\" in item && !!fftParamKeywords.find((k) => item.address.endsWith(k));\n    if (isFFTReserved)\n      return null;\n    if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"nentry\") {\n      return { name: item.address, defaultValue: item.init || 0, minValue: item.min || 0, maxValue: item.max || 0 };\n    } else if (item.type === \"button\" || item.type === \"checkbox\") {\n      return { name: item.address, defaultValue: item.init || 0, minValue: 0, maxValue: 1 };\n    }\n    return null;\n  };\n  class FaustFFTAudioWorkletProcessor extends AudioWorkletProcessor {\n    constructor(options) {\n      super(options);\n      this.paramValuesCache = {};\n      this.destroyed = false;\n      /** Pointer of next start sample to write of the FFT input window */\n      this.$inputWrite = 0;\n      /** Pointer of next start sample to read of the FFT input window */\n      this.$inputRead = 0;\n      /** Pointer of next start sample to write of the FFT output window */\n      this.$outputWrite = 0;\n      /** Pointer of next start sample to read of the FFT output window */\n      this.$outputRead = 0;\n      /** Not perform in IFFT when reconstruct the audio signal */\n      this.noIFFT = false;\n      /** audio data from input, array of channels */\n      this.fftInput = [];\n      /** audio data for output, array of channels */\n      this.fftOutput = [];\n      /** FFT Overlaps, 1 means no overlap */\n      this.fftOverlap = 0;\n      this.fftHopSize = 0;\n      this.fftSize = 0;\n      this.fftBufferSize = 0;\n      this.fPlotHandler = null;\n      this.fCachedEvents = [];\n      this.fBufferNum = 0;\n      this.soundfiles = {};\n      this.windowFunction = null;\n      this.port.onmessage = (e) => this.handleMessageAux(e);\n      const { parameterDescriptors } = this.constructor;\n      parameterDescriptors.forEach((pd) => {\n        this.paramValuesCache[pd.name] = pd.defaultValue || 0;\n      });\n      const { factory, sampleSize } = options.processorOptions;\n      this.dspInstance = FaustWasmInstantiator2.createSyncMonoDSPInstance(factory);\n      this.sampleSize = sampleSize;\n      this.soundfiles = factory.soundfiles;\n      this.initFFT();\n      const { moduleId, instanceId } = options.processorOptions;\n      if (!moduleId || !instanceId)\n        return;\n      this.wamInfo = { moduleId, instanceId };\n    }\n    get fftProcessorBufferSize() {\n      return this.fftSize / 2 + 1;\n    }\n    async initFFT() {\n      this.FFT = await getFFT();\n      await this.createFFTProcessor();\n      return true;\n    }\n    static get parameterDescriptors() {\n      const params = [];\n      const callback = (item) => {\n        const param = analyseParameters(item);\n        if (param)\n          params.push(param);\n      };\n      FaustBaseWebAudioDsp2.parseUI(dspMeta.ui, callback);\n      return [\n        ...params,\n        {\n          defaultValue: (fftOptions == null ? void 0 : fftOptions.fftSize) || 1024,\n          maxValue: 2 ** 32,\n          minValue: 2,\n          name: \"fftSize\"\n        },\n        {\n          defaultValue: (fftOptions == null ? void 0 : fftOptions.fftOverlap) || 2,\n          maxValue: 32,\n          minValue: 1,\n          name: \"fftOverlap\"\n        },\n        {\n          defaultValue: typeof (fftOptions == null ? void 0 : fftOptions.defaultWindowFunction) === \"number\" ? fftOptions.defaultWindowFunction + 1 : 0,\n          maxValue: (windowFunctions == null ? void 0 : windowFunctions.length) || 0,\n          minValue: 0,\n          name: \"windowFunction\"\n        },\n        {\n          defaultValue: +!!(fftOptions == null ? void 0 : fftOptions.noIFFT) || 0,\n          maxValue: 1,\n          minValue: 0,\n          name: \"noIFFT\"\n        }\n      ];\n    }\n    setupWamEventHandler() {\n      var _a;\n      if (!this.wamInfo)\n        return;\n      const { moduleId, instanceId } = this.wamInfo;\n      const { webAudioModules } = globalThis;\n      const ModuleScope = webAudioModules.getModuleScope(moduleId);\n      const paramMgrProcessor = (_a = ModuleScope == null ? void 0 : ModuleScope.paramMgrProcessors) == null ? void 0 : _a[instanceId];\n      if (!paramMgrProcessor)\n        return;\n      if (paramMgrProcessor.handleEvent)\n        return;\n      paramMgrProcessor.handleEvent = (event) => {\n        if (event.type === \"wam-midi\")\n          this.midiMessage(event.data.bytes);\n      };\n    }\n    processFFT() {\n      let samplesForFFT = mod(this.$inputWrite - this.$inputRead, this.fftBufferSize) || this.fftBufferSize;\n      while (samplesForFFT >= this.fftSize) {\n        let fftProcessorOutputs = [];\n        this.fDSPCode.compute((inputs) => {\n          for (let i = 0; i < Math.min(this.fftInput.length, Math.ceil(inputs.length / 3)); i++) {\n            const ffted = this.rfft.forward((fftBuffer) => {\n              setTypedArray(fftBuffer, this.fftInput[i], 0, this.$inputRead);\n              for (let j = 0; j < fftBuffer.length; j++) {\n                fftBuffer[j] *= this.window[j];\n              }\n            });\n            fftToSignal(ffted, inputs[i * 3], inputs[i * 3 + 1], inputs[i * 3 + 2]);\n          }\n          for (let i = this.fftInput.length * 3; i < inputs.length; i++) {\n            if (i % 3 === 2)\n              inputs[i].forEach((v, j) => inputs[i][j] = j);\n            else\n              inputs[i].fill(0);\n          }\n        }, (outputs) => {\n          fftProcessorOutputs = outputs;\n        });\n        this.$inputRead += this.fftHopSize;\n        this.$inputRead %= this.fftBufferSize;\n        samplesForFFT -= this.fftHopSize;\n        for (let i = 0; i < this.fftOutput.length; i++) {\n          let iffted;\n          if (this.noIFFT) {\n            iffted = this.noIFFTBuffer;\n            signalToNoFFT(fftProcessorOutputs[i * 2] || this.fftProcessorZeros, fftProcessorOutputs[i * 2 + 1] || this.fftProcessorZeros, iffted);\n          } else {\n            iffted = this.rfft.inverse((ifftBuffer) => {\n              signalToFFT(fftProcessorOutputs[i * 2] || this.fftProcessorZeros, fftProcessorOutputs[i * 2 + 1] || this.fftProcessorZeros, ifftBuffer);\n            });\n          }\n          for (let j = 0; j < iffted.length; j++) {\n            iffted[j] *= this.window[j];\n          }\n          let $;\n          for (let j = 0; j < iffted.length - this.fftHopSize; j++) {\n            $ = mod(this.$outputWrite + j, this.fftBufferSize);\n            this.fftOutput[i][$] += iffted[j];\n            if (i === 0)\n              this.windowSumSquare[$] += this.noIFFT ? this.window[j] : this.window[j] ** 2;\n          }\n          for (let j = iffted.length - this.fftHopSize; j < iffted.length; j++) {\n            $ = mod(this.$outputWrite + j, this.fftBufferSize);\n            this.fftOutput[i][$] = iffted[j];\n            if (i === 0)\n              this.windowSumSquare[$] = this.noIFFT ? this.window[j] : this.window[j] ** 2;\n          }\n        }\n        this.$outputWrite += this.fftHopSize;\n        this.$outputWrite %= this.fftBufferSize;\n      }\n    }\n    process(inputs, outputs, parameters) {\n      if (this.destroyed)\n        return false;\n      if (!this.FFT)\n        return true;\n      const input = inputs[0];\n      const output = outputs[0];\n      const inputChannels = (input == null ? void 0 : input.length) || 0;\n      const outputChannels = (output == null ? void 0 : output.length) || 0;\n      const bufferSize = (input == null ? void 0 : input.length) ? Math.max(...input.map((c) => c.length)) || 128 : 128;\n      this.noIFFT = !!parameters.noIFFT[0];\n      this.resetFFT(~~parameters.fftSize[0], ~~parameters.fftOverlap[0], ~~parameters.windowFunction[0], inputChannels, outputChannels, bufferSize);\n      if (!this.fDSPCode)\n        return true;\n      for (const path in parameters) {\n        if (!!fftParamKeywords.find((k) => `/${path}`.endsWith(k)))\n          continue;\n        const [paramValue] = parameters[path];\n        if (paramValue !== this.paramValuesCache[path]) {\n          this.fDSPCode.setParamValue(path, paramValue);\n          this.paramValuesCache[path] = paramValue;\n        }\n      }\n      if (input == null ? void 0 : input.length) {\n        let $inputWrite = 0;\n        for (let i = 0; i < input.length; i++) {\n          const inputWindow = this.fftInput[i];\n          const channel = input[i].length ? input[i] : new Float32Array(bufferSize);\n          $inputWrite = setTypedArray(inputWindow, channel, this.$inputWrite);\n        }\n        this.$inputWrite = $inputWrite;\n      } else {\n        this.$inputWrite += bufferSize;\n        this.$inputWrite %= this.fftBufferSize;\n      }\n      this.processFFT();\n      for (let i = 0; i < output.length; i++) {\n        setTypedArray(output[i], this.fftOutput[i], 0, this.$outputRead);\n        let div = 0;\n        for (let j = 0; j < bufferSize; j++) {\n          div = this.windowSumSquare[mod(this.$outputRead + j, this.fftBufferSize)];\n          output[i][j] /= div < 1e-8 ? 1 : div;\n        }\n      }\n      this.$outputRead += bufferSize;\n      this.$outputRead %= this.fftBufferSize;\n      if (this.fPlotHandler) {\n        this.port.postMessage({ type: \"plot\", value: output, index: this.fBufferNum++, events: this.fCachedEvents });\n        this.fCachedEvents = [];\n      }\n      return true;\n    }\n    handleMessageAux(e) {\n      var _a, _b, _c;\n      const msg = e.data;\n      switch (msg.type) {\n        case \"midi\":\n          this.midiMessage(msg.data);\n          break;\n        case \"ctrlChange\":\n          this.ctrlChange(msg.data[0], msg.data[1], msg.data[2]);\n          break;\n        case \"pitchWheel\":\n          this.pitchWheel(msg.data[0], msg.data[1]);\n          break;\n        case \"param\":\n          this.setParamValue(msg.data.path, msg.data.value);\n          break;\n        case \"setPlotHandler\": {\n          if (msg.data) {\n            this.fPlotHandler = (output, index, events) => {\n              if (events)\n                this.fCachedEvents.push(...events);\n            };\n          } else {\n            this.fPlotHandler = null;\n          }\n          (_a = this.fDSPCode) == null ? void 0 : _a.setPlotHandler(this.fPlotHandler);\n          break;\n        }\n        case \"setupWamEventHandler\": {\n          this.setupWamEventHandler();\n          break;\n        }\n        case \"start\": {\n          (_b = this.fDSPCode) == null ? void 0 : _b.start();\n          break;\n        }\n        case \"stop\": {\n          (_c = this.fDSPCode) == null ? void 0 : _c.stop();\n          break;\n        }\n        case \"destroy\": {\n          this.port.close();\n          this.destroy();\n          break;\n        }\n        default:\n          break;\n      }\n    }\n    setParamValue(path, value) {\n      var _a;\n      (_a = this.fDSPCode) == null ? void 0 : _a.setParamValue(path, value);\n      this.paramValuesCache[path] = value;\n    }\n    midiMessage(data) {\n      var _a;\n      (_a = this.fDSPCode) == null ? void 0 : _a.midiMessage(data);\n    }\n    ctrlChange(channel, ctrl, value) {\n      var _a;\n      (_a = this.fDSPCode) == null ? void 0 : _a.ctrlChange(channel, ctrl, value);\n    }\n    pitchWheel(channel, wheel) {\n      var _a;\n      (_a = this.fDSPCode) == null ? void 0 : _a.pitchWheel(channel, wheel);\n    }\n    resetFFT(sizeIn, overlapIn, windowFunctionIn, inputChannels, outputChannels, bufferSize) {\n      var _a, _b;\n      const fftSize = ~~ceil(Math.max(2, sizeIn || 1024), 2);\n      const fftOverlap = ~~Math.min(fftSize, Math.max(1, overlapIn));\n      const fftHopSize = ~~Math.max(1, fftSize / fftOverlap);\n      const latency = fftSize - Math.min(fftHopSize, bufferSize);\n      let windowFunction = null;\n      if (windowFunctionIn !== 0) {\n        windowFunction = typeof windowFunctions === \"object\" ? windowFunctions[~~windowFunctionIn - 1] || null : null;\n      }\n      const fftSizeChanged = fftSize !== this.fftSize;\n      const fftOverlapChanged = fftOverlap !== this.fftOverlap;\n      if (fftSizeChanged || fftOverlapChanged) {\n        this.fftSize = fftSize;\n        this.fftOverlap = fftOverlap;\n        this.fftHopSize = fftHopSize;\n        this.$inputWrite = 0;\n        this.$inputRead = 0;\n        this.$outputWrite = 0;\n        this.$outputRead = -latency;\n        this.fftBufferSize = Math.max(fftSize * 2 - this.fftHopSize, bufferSize * 2);\n        if (!fftSizeChanged && this.fftHopSizeParam)\n          (_a = this.fDSPCode) == null ? void 0 : _a.setParamValue(this.fftHopSizeParam, this.fftHopSize);\n      }\n      if (fftSizeChanged) {\n        (_b = this.rfft) == null ? void 0 : _b.dispose();\n        this.rfft = new this.FFT(fftSize);\n        this.noIFFTBuffer = new Float32Array(this.fftSize);\n        this.createFFTProcessor();\n      }\n      if (fftSizeChanged || fftOverlapChanged || windowFunction !== this.windowFunction) {\n        this.windowFunction = windowFunction;\n        this.window = new Float32Array(fftSize);\n        this.window.fill(1);\n        if (windowFunction)\n          apply(this.window, windowFunction);\n        this.windowSumSquare = new Float32Array(this.fftBufferSize);\n      }\n      if (this.fftInput.length > inputChannels) {\n        this.fftInput.splice(inputChannels);\n      }\n      if (this.fftOutput.length > outputChannels) {\n        this.fftOutput.splice(outputChannels);\n      }\n      if (fftSizeChanged || fftOverlapChanged) {\n        for (let i = 0; i < inputChannels; i++) {\n          this.fftInput[i] = new Float32Array(this.fftBufferSize);\n        }\n        for (let i = 0; i < outputChannels; i++) {\n          this.fftOutput[i] = new Float32Array(this.fftBufferSize);\n        }\n      } else {\n        if (this.fftInput.length < inputChannels) {\n          for (let i = this.fftInput.length; i < inputChannels; i++) {\n            this.fftInput[i] = new Float32Array(this.fftBufferSize);\n          }\n        }\n        if (this.fftOutput.length < outputChannels) {\n          for (let i = this.fftOutput.length; i < outputChannels; i++) {\n            this.fftOutput[i] = new Float32Array(this.fftBufferSize);\n          }\n        }\n      }\n    }\n    async createFFTProcessor() {\n      var _a, _b;\n      (_a = this.fDSPCode) == null ? void 0 : _a.stop();\n      (_b = this.fDSPCode) == null ? void 0 : _b.destroy();\n      this.fDSPCode = new FaustMonoWebAudioDsp2(this.dspInstance, sampleRate, this.sampleSize, this.fftProcessorBufferSize, this.soundfiles);\n      this.fDSPCode.setOutputParamHandler((path, value) => this.port.postMessage({ path, value, type: \"param\" }));\n      this.fDSPCode.setPlotHandler(this.fPlotHandler);\n      const params = this.fDSPCode.getParams();\n      this.fDSPCode.start();\n      for (const path in this.paramValuesCache) {\n        if (!!fftParamKeywords.find((k) => `/${path}`.endsWith(k)))\n          continue;\n        this.fDSPCode.setParamValue(path, this.paramValuesCache[path]);\n      }\n      const fftSizeParam = params.find((s) => s.endsWith(\"/fftSize\"));\n      if (fftSizeParam)\n        this.fDSPCode.setParamValue(fftSizeParam, this.fftSize);\n      this.fftHopSizeParam = params.find((s) => s.endsWith(\"/fftHopSize\"));\n      if (this.fftHopSizeParam)\n        this.fDSPCode.setParamValue(this.fftHopSizeParam, this.fftHopSize);\n      this.fftProcessorZeros = new Float32Array(this.fftProcessorBufferSize);\n    }\n    destroy() {\n      var _a, _b, _c;\n      (_a = this.fDSPCode) == null ? void 0 : _a.stop();\n      (_b = this.fDSPCode) == null ? void 0 : _b.destroy();\n      (_c = this.rfft) == null ? void 0 : _c.dispose();\n      this.destroyed = true;\n    }\n  }\n  const Processor = FaustFFTAudioWorkletProcessor;\n  if (register) {\n    try {\n      registerProcessor(processorName || dspName || \"myfftdsp\", Processor);\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n  return FaustFFTAudioWorkletProcessor;\n};\nvar FaustFFTAudioWorkletProcessor_default = getFaustFFTAudioWorkletProcessor;\n\n// node_modules/tslib/tslib.es6.mjs\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function(resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function(resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nfunction __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() {\n    if (t[0] & 1)\n      throw t[1];\n    return t[1];\n  }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n    return this;\n  }), g;\n  function verb(n) {\n    return function(v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f)\n      throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _)\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n          return t;\n        if (y = 0, t)\n          op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return { value: op[1], done: false };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2])\n              _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    if (op[0] & 5)\n      throw op[1];\n    return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\n// node_modules/@aws-crypto/sha256-js/build/module/constants.js\nvar BLOCK_SIZE = 64;\nvar DIGEST_LENGTH = 32;\nvar KEY = new Uint32Array([\n  1116352408,\n  1899447441,\n  3049323471,\n  3921009573,\n  961987163,\n  1508970993,\n  2453635748,\n  2870763221,\n  3624381080,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  2162078206,\n  2614888103,\n  3248222580,\n  3835390401,\n  4022224774,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  2554220882,\n  2821834349,\n  2952996808,\n  3210313671,\n  3336571891,\n  3584528711,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  2177026350,\n  2456956037,\n  2730485921,\n  2820302411,\n  3259730800,\n  3345764771,\n  3516065817,\n  3600352804,\n  4094571909,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  2227730452,\n  2361852424,\n  2428436474,\n  2756734187,\n  3204031479,\n  3329325298\n]);\nvar INIT = [\n  1779033703,\n  3144134277,\n  1013904242,\n  2773480762,\n  1359893119,\n  2600822924,\n  528734635,\n  1541459225\n];\nvar MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n\n// node_modules/@aws-crypto/sha256-js/build/module/RawSha256.js\nvar RawSha256 = (\n  /** @class */\n  function() {\n    function RawSha2562() {\n      this.state = Int32Array.from(INIT);\n      this.temp = new Int32Array(64);\n      this.buffer = new Uint8Array(64);\n      this.bufferLength = 0;\n      this.bytesHashed = 0;\n      this.finished = false;\n    }\n    RawSha2562.prototype.update = function(data) {\n      if (this.finished) {\n        throw new Error(\"Attempted to update an already finished hash.\");\n      }\n      var position = 0;\n      var byteLength = data.byteLength;\n      this.bytesHashed += byteLength;\n      if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n        throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n      }\n      while (byteLength > 0) {\n        this.buffer[this.bufferLength++] = data[position++];\n        byteLength--;\n        if (this.bufferLength === BLOCK_SIZE) {\n          this.hashBuffer();\n          this.bufferLength = 0;\n        }\n      }\n    };\n    RawSha2562.prototype.digest = function() {\n      if (!this.finished) {\n        var bitsHashed = this.bytesHashed * 8;\n        var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n        var undecoratedLength = this.bufferLength;\n        bufferView.setUint8(this.bufferLength++, 128);\n        if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n          for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n            bufferView.setUint8(i, 0);\n          }\n          this.hashBuffer();\n          this.bufferLength = 0;\n        }\n        for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 4294967296), true);\n        bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n        this.hashBuffer();\n        this.finished = true;\n      }\n      var out = new Uint8Array(DIGEST_LENGTH);\n      for (var i = 0; i < 8; i++) {\n        out[i * 4] = this.state[i] >>> 24 & 255;\n        out[i * 4 + 1] = this.state[i] >>> 16 & 255;\n        out[i * 4 + 2] = this.state[i] >>> 8 & 255;\n        out[i * 4 + 3] = this.state[i] >>> 0 & 255;\n      }\n      return out;\n    };\n    RawSha2562.prototype.hashBuffer = function() {\n      var _a = this, buffer = _a.buffer, state = _a.state;\n      var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n      for (var i = 0; i < BLOCK_SIZE; i++) {\n        if (i < 16) {\n          this.temp[i] = (buffer[i * 4] & 255) << 24 | (buffer[i * 4 + 1] & 255) << 16 | (buffer[i * 4 + 2] & 255) << 8 | buffer[i * 4 + 3] & 255;\n        } else {\n          var u = this.temp[i - 2];\n          var t1_1 = (u >>> 17 | u << 15) ^ (u >>> 19 | u << 13) ^ u >>> 10;\n          u = this.temp[i - 15];\n          var t2_1 = (u >>> 7 | u << 25) ^ (u >>> 18 | u << 14) ^ u >>> 3;\n          this.temp[i] = (t1_1 + this.temp[i - 7] | 0) + (t2_1 + this.temp[i - 16] | 0);\n        }\n        var t1 = (((state4 >>> 6 | state4 << 26) ^ (state4 >>> 11 | state4 << 21) ^ (state4 >>> 25 | state4 << 7)) + (state4 & state5 ^ ~state4 & state6) | 0) + (state7 + (KEY[i] + this.temp[i] | 0) | 0) | 0;\n        var t2 = ((state0 >>> 2 | state0 << 30) ^ (state0 >>> 13 | state0 << 19) ^ (state0 >>> 22 | state0 << 10)) + (state0 & state1 ^ state0 & state2 ^ state1 & state2) | 0;\n        state7 = state6;\n        state6 = state5;\n        state5 = state4;\n        state4 = state3 + t1 | 0;\n        state3 = state2;\n        state2 = state1;\n        state1 = state0;\n        state0 = t1 + t2 | 0;\n      }\n      state[0] += state0;\n      state[1] += state1;\n      state[2] += state2;\n      state[3] += state3;\n      state[4] += state4;\n      state[5] += state5;\n      state[6] += state6;\n      state[7] += state7;\n    };\n    return RawSha2562;\n  }()\n);\n\n// node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js\nvar fromUtf8 = (input) => new TextEncoder().encode(input);\n\n// node_modules/@aws-crypto/util/build/module/convertToBuffer.js\nvar fromUtf82 = typeof Buffer !== \"undefined\" && Buffer.from ? function(input) {\n  return Buffer.from(input, \"utf8\");\n} : fromUtf8;\nfunction convertToBuffer(data) {\n  if (data instanceof Uint8Array)\n    return data;\n  if (typeof data === \"string\") {\n    return fromUtf82(data);\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n  return new Uint8Array(data);\n}\n\n// node_modules/@aws-crypto/util/build/module/isEmptyData.js\nfunction isEmptyData(data) {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n  return data.byteLength === 0;\n}\n\n// node_modules/@aws-crypto/sha256-js/build/module/jsSha256.js\nvar Sha256 = (\n  /** @class */\n  function() {\n    function Sha2562(secret) {\n      this.secret = secret;\n      this.hash = new RawSha256();\n      this.reset();\n    }\n    Sha2562.prototype.update = function(toHash) {\n      if (isEmptyData(toHash) || this.error) {\n        return;\n      }\n      try {\n        this.hash.update(convertToBuffer(toHash));\n      } catch (e) {\n        this.error = e;\n      }\n    };\n    Sha2562.prototype.digestSync = function() {\n      if (this.error) {\n        throw this.error;\n      }\n      if (this.outer) {\n        if (!this.outer.finished) {\n          this.outer.update(this.hash.digest());\n        }\n        return this.outer.digest();\n      }\n      return this.hash.digest();\n    };\n    Sha2562.prototype.digest = function() {\n      return __awaiter(this, void 0, void 0, function() {\n        return __generator(this, function(_a) {\n          return [2, this.digestSync()];\n        });\n      });\n    };\n    Sha2562.prototype.reset = function() {\n      this.hash = new RawSha256();\n      if (this.secret) {\n        this.outer = new RawSha256();\n        var inner = bufferFromSecret(this.secret);\n        var outer = new Uint8Array(BLOCK_SIZE);\n        outer.set(inner);\n        for (var i = 0; i < BLOCK_SIZE; i++) {\n          inner[i] ^= 54;\n          outer[i] ^= 92;\n        }\n        this.hash.update(inner);\n        this.outer.update(outer);\n        for (var i = 0; i < inner.byteLength; i++) {\n          inner[i] = 0;\n        }\n      }\n    };\n    return Sha2562;\n  }()\n);\nfunction bufferFromSecret(secret) {\n  var input = convertToBuffer(secret);\n  if (input.byteLength > BLOCK_SIZE) {\n    var bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n  var buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n\n// src/FaustCompiler.ts\nvar ab2str = (buf) => String.fromCharCode.apply(null, buf);\nvar str2ab = (str) => {\n  const buf = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufView;\n};\nvar sha256 = async (str) => {\n  const sha2562 = new Sha256();\n  sha2562.update(str);\n  const hashArray = Array.from(await sha2562.digest());\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n  return hashHex;\n};\nvar _FaustCompiler = class _FaustCompiler {\n  /**\n   * Get a stringified DSP factories table\n   */\n  static serializeDSPFactories() {\n    const table = {};\n    this.gFactories.forEach((factory, shaKey) => {\n      const { code, json, poly } = factory;\n      table[shaKey] = { code: btoa(ab2str(code)), json: JSON.parse(json), poly };\n    });\n    return table;\n  }\n  /**\n   * Get a stringified DSP factories table as string\n   */\n  static stringifyDSPFactories() {\n    return JSON.stringify(this.serializeDSPFactories());\n  }\n  /**\n   * Import a DSP factories table\n   */\n  static deserializeDSPFactories(table) {\n    const awaited = [];\n    for (const shaKey in table) {\n      const factory = table[shaKey];\n      const { code, json, poly } = factory;\n      const ab = str2ab(atob(code));\n      awaited.push(WebAssembly.compile(ab).then((module) => this.gFactories.set(shaKey, { shaKey, cfactory: 0, code: ab, module, json: JSON.stringify(json), poly, soundfiles: {} })));\n    }\n    return Promise.all(awaited);\n  }\n  /**\n   * Import a stringified DSP factories table\n   */\n  static importDSPFactories(tableStr) {\n    const table = JSON.parse(tableStr);\n    return this.deserializeDSPFactories(table);\n  }\n  constructor(libFaust) {\n    this.fLibFaust = libFaust;\n    this.fErrorMessage = \"\";\n  }\n  intVec2intArray(vec) {\n    const size = vec.size();\n    const ui8Code = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n      ui8Code[i] = vec.get(i);\n    }\n    return ui8Code;\n  }\n  async createDSPFactory(name, code, args, poly) {\n    if (_FaustCompiler.gFactories.size > 10) {\n      _FaustCompiler.gFactories.clear();\n    }\n    let shaKey = await sha256(name + code + args + (poly ? \"poly\" : \"mono\"));\n    if (_FaustCompiler.gFactories.has(shaKey)) {\n      return _FaustCompiler.gFactories.get(shaKey) || null;\n    } else {\n      try {\n        const faustDspWasm = this.fLibFaust.createDSPFactory(name, code, args, !poly);\n        const ui8Code = this.intVec2intArray(faustDspWasm.data);\n        faustDspWasm.data.delete();\n        const module = await WebAssembly.compile(ui8Code);\n        const factory = { shaKey, cfactory: faustDspWasm.cfactory, code: ui8Code, module, json: faustDspWasm.json, poly, soundfiles: {} };\n        this.deleteDSPFactory(factory);\n        _FaustCompiler.gFactories.set(shaKey, factory);\n        return factory;\n      } catch (e) {\n        this.fErrorMessage = this.fLibFaust.getErrorAfterException();\n        this.fLibFaust.cleanupAfterException();\n        throw this.fErrorMessage ? new Error(this.fErrorMessage) : e;\n      }\n    }\n  }\n  version() {\n    return this.fLibFaust.version();\n  }\n  getErrorMessage() {\n    return this.fErrorMessage;\n  }\n  async createMonoDSPFactory(name, code, args) {\n    return this.createDSPFactory(name, code, args, false);\n  }\n  async createPolyDSPFactory(name, code, args) {\n    return this.createDSPFactory(name, code, args, true);\n  }\n  deleteDSPFactory(factory) {\n    this.fLibFaust.deleteDSPFactory(factory.cfactory);\n    factory.cfactory = 0;\n  }\n  expandDSP(code, args) {\n    try {\n      return this.fLibFaust.expandDSP(\"FaustDSP\", code, args);\n    } catch (e) {\n      this.fErrorMessage = this.fLibFaust.getErrorAfterException();\n      this.fLibFaust.cleanupAfterException();\n      throw this.fErrorMessage ? new Error(this.fErrorMessage) : e;\n    }\n  }\n  generateAuxFiles(name, code, args) {\n    try {\n      return this.fLibFaust.generateAuxFiles(name, code, args);\n    } catch (e) {\n      this.fErrorMessage = this.fLibFaust.getErrorAfterException();\n      this.fLibFaust.cleanupAfterException();\n      throw this.fErrorMessage ? new Error(this.fErrorMessage) : e;\n    }\n  }\n  deleteAllDSPFactories() {\n    this.fLibFaust.deleteAllDSPFactories();\n  }\n  fs() {\n    return this.fLibFaust.fs();\n  }\n  async getAsyncInternalMixerModule(isDouble = false) {\n    const bufferKey = isDouble ? \"mixer64Buffer\" : \"mixer32Buffer\";\n    const moduleKey = isDouble ? \"mixer64Module\" : \"mixer32Module\";\n    if (this[moduleKey])\n      return { mixerBuffer: this[bufferKey], mixerModule: this[moduleKey] };\n    const path = isDouble ? \"/usr/rsrc/mixer64.wasm\" : \"/usr/rsrc/mixer32.wasm\";\n    const mixerBuffer = this.fs().readFile(path, { encoding: \"binary\" });\n    this[bufferKey] = mixerBuffer;\n    const mixerModule = await WebAssembly.compile(mixerBuffer);\n    this[moduleKey] = mixerModule;\n    return { mixerBuffer, mixerModule };\n  }\n  getSyncInternalMixerModule(isDouble = false) {\n    const bufferKey = isDouble ? \"mixer64Buffer\" : \"mixer32Buffer\";\n    const moduleKey = isDouble ? \"mixer64Module\" : \"mixer32Module\";\n    if (this[moduleKey])\n      return { mixerBuffer: this[bufferKey], mixerModule: this[moduleKey] };\n    const path = isDouble ? \"/usr/rsrc/mixer64.wasm\" : \"/usr/rsrc/mixer32.wasm\";\n    const mixerBuffer = this.fs().readFile(path, { encoding: \"binary\" });\n    this[bufferKey] = mixerBuffer;\n    const mixerModule = new WebAssembly.Module(mixerBuffer);\n    this[moduleKey] = mixerModule;\n    return { mixerBuffer, mixerModule };\n  }\n};\n_FaustCompiler.gFactories = /* @__PURE__ */ new Map();\nvar FaustCompiler = _FaustCompiler;\nvar FaustCompiler_default = FaustCompiler;\n\n// src/FaustDspInstance.ts\nvar FaustDspInstance = class {\n  constructor(exports) {\n    this.fExports = exports;\n  }\n  compute($dsp, count, $input, $output) {\n    this.fExports.compute($dsp, count, $input, $output);\n  }\n  getNumInputs($dsp) {\n    return this.fExports.getNumInputs($dsp);\n  }\n  getNumOutputs($dsp) {\n    return this.fExports.getNumOutputs($dsp);\n  }\n  getParamValue($dsp, index) {\n    return this.fExports.getParamValue($dsp, index);\n  }\n  getSampleRate($dsp) {\n    return this.fExports.getSampleRate($dsp);\n  }\n  init($dsp, sampleRate) {\n    this.fExports.init($dsp, sampleRate);\n  }\n  instanceClear($dsp) {\n    this.fExports.instanceClear($dsp);\n  }\n  instanceConstants($dsp, sampleRate) {\n    this.fExports.instanceConstants($dsp, sampleRate);\n  }\n  instanceInit($dsp, sampleRate) {\n    this.fExports.instanceInit($dsp, sampleRate);\n  }\n  instanceResetUserInterface($dsp) {\n    this.fExports.instanceResetUserInterface($dsp);\n  }\n  setParamValue($dsp, index, value) {\n    this.fExports.setParamValue($dsp, index, value);\n  }\n};\n\n// src/FaustWasmInstantiator.ts\nvar FaustWasmInstantiator = class {\n  static createWasmImport(memory) {\n    return {\n      env: {\n        memory: memory || new WebAssembly.Memory({ initial: 100 }),\n        memoryBase: 0,\n        tableBase: 0,\n        // Integer version\n        _abs: Math.abs,\n        // Float version\n        _acosf: Math.acos,\n        _asinf: Math.asin,\n        _atanf: Math.atan,\n        _atan2f: Math.atan2,\n        _ceilf: Math.ceil,\n        _cosf: Math.cos,\n        _expf: Math.exp,\n        _floorf: Math.floor,\n        _fmodf: (x, y) => x % y,\n        _logf: Math.log,\n        _log10f: Math.log10,\n        _max_f: Math.max,\n        _min_f: Math.min,\n        _remainderf: (x, y) => x - Math.round(x / y) * y,\n        _powf: Math.pow,\n        _roundf: Math.round,\n        _sinf: Math.sin,\n        _sqrtf: Math.sqrt,\n        _tanf: Math.tan,\n        _acoshf: Math.acosh,\n        _asinhf: Math.asinh,\n        _atanhf: Math.atanh,\n        _coshf: Math.cosh,\n        _sinhf: Math.sinh,\n        _tanhf: Math.tanh,\n        _isnanf: Number.isNaN,\n        _isinff: (x) => !isFinite(x),\n        _copysignf: (x, y) => Math.sign(x) === Math.sign(y) ? x : -x,\n        // Double version\n        _acos: Math.acos,\n        _asin: Math.asin,\n        _atan: Math.atan,\n        _atan2: Math.atan2,\n        _ceil: Math.ceil,\n        _cos: Math.cos,\n        _exp: Math.exp,\n        _floor: Math.floor,\n        _fmod: (x, y) => x % y,\n        _log: Math.log,\n        _log10: Math.log10,\n        _max_: Math.max,\n        _min_: Math.min,\n        _remainder: (x, y) => x - Math.round(x / y) * y,\n        _pow: Math.pow,\n        _round: Math.round,\n        _sin: Math.sin,\n        _sqrt: Math.sqrt,\n        _tan: Math.tan,\n        _acosh: Math.acosh,\n        _asinh: Math.asinh,\n        _atanh: Math.atanh,\n        _cosh: Math.cosh,\n        _sinh: Math.sinh,\n        _tanh: Math.tanh,\n        _isnan: Number.isNaN,\n        _isinf: (x) => !isFinite(x),\n        _copysign: (x, y) => Math.sign(x) === Math.sign(y) ? x : -x,\n        table: new WebAssembly.Table({ initial: 0, element: \"anyfunc\" })\n      }\n    };\n  }\n  static createWasmMemoryPoly(voicesIn, sampleSize, dspMeta, effectMeta, bufferSize) {\n    const voices = Math.max(4, voicesIn);\n    const ptrSize = sampleSize;\n    const pow2limit = (x) => {\n      let n = 65536;\n      while (n < x) {\n        n *= 2;\n      }\n      return n;\n    };\n    const effectSize = effectMeta ? effectMeta.size : 0;\n    let memorySize = pow2limit(\n      effectSize + dspMeta.size * voices + (dspMeta.inputs + dspMeta.outputs * 2) * (ptrSize + bufferSize * sampleSize)\n    ) / 65536;\n    memorySize = Math.max(2, memorySize);\n    return new WebAssembly.Memory({ initial: memorySize });\n  }\n  static createWasmMemoryMono(sampleSize, dspMeta, bufferSize) {\n    const ptrSize = sampleSize;\n    const memorySize = (dspMeta.size + (dspMeta.inputs + dspMeta.outputs) * (ptrSize + bufferSize * sampleSize)) / 65536;\n    return new WebAssembly.Memory({ initial: memorySize * 2 });\n  }\n  static createMonoDSPInstanceAux(instance, json, mem = null) {\n    const functions = instance.exports;\n    const api = new FaustDspInstance(functions);\n    const memory = mem ? mem : instance.exports.memory;\n    return { memory, api, json };\n  }\n  static createMemoryMono(monoFactory) {\n    const monoMeta = JSON.parse(monoFactory.json);\n    const sampleSize = monoMeta.compile_options.match(\"-double\") ? 8 : 4;\n    return this.createWasmMemoryMono(sampleSize, monoMeta, 8192);\n  }\n  static createMemoryPoly(voices, voiceFactory, effectFactory) {\n    const voiceMeta = JSON.parse(voiceFactory.json);\n    const effectMeta = effectFactory && effectFactory.json ? JSON.parse(effectFactory.json) : null;\n    const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n    return this.createWasmMemoryPoly(voices, sampleSize, voiceMeta, effectMeta, 8192);\n  }\n  static createMixerAux(mixerModule, memory) {\n    const mixerImport = {\n      imports: { print: console.log },\n      memory: { memory }\n    };\n    const mixerInstance = new WebAssembly.Instance(mixerModule, mixerImport);\n    const mixerFunctions = mixerInstance.exports;\n    return mixerFunctions;\n  }\n  // Public API\n  static async loadDSPFactory(wasmPath, jsonPath) {\n    const wasmFile = await fetch(wasmPath);\n    if (!wasmFile.ok) {\n      throw new Error(`=> exception raised while running loadDSPFactory, file not found: ${wasmPath}`);\n    }\n    try {\n      const wasmBuffer = await wasmFile.arrayBuffer();\n      const module = await WebAssembly.compile(wasmBuffer);\n      const jsonFile = await fetch(jsonPath);\n      const json = await jsonFile.text();\n      const meta = JSON.parse(json);\n      const cOptions = meta.compile_options;\n      const poly = cOptions.indexOf(\"wasm-e\") !== -1;\n      return { cfactory: 0, code: new Uint8Array(wasmBuffer), module, json, poly };\n    } catch (e) {\n      throw e;\n    }\n  }\n  static async loadDSPMixer(mixerPath, fs) {\n    try {\n      let mixerBuffer = null;\n      if (fs) {\n        mixerBuffer = fs.readFile(mixerPath, { encoding: \"binary\" });\n      } else {\n        const mixerFile = await fetch(mixerPath);\n        mixerBuffer = await mixerFile.arrayBuffer();\n      }\n      return WebAssembly.compile(mixerBuffer);\n    } catch (e) {\n      throw e;\n    }\n  }\n  static async createAsyncMonoDSPInstance(factory) {\n    const pattern = /\"type\":\\s*\"soundfile\"/;\n    const isDetected = pattern.test(factory.json);\n    if (isDetected) {\n      const memory = this.createMemoryMono(factory);\n      const instance = await WebAssembly.instantiate(factory.module, this.createWasmImport(memory));\n      return this.createMonoDSPInstanceAux(instance, factory.json, memory);\n    } else {\n      const instance = await WebAssembly.instantiate(factory.module, this.createWasmImport());\n      return this.createMonoDSPInstanceAux(instance, factory.json);\n    }\n  }\n  static createSyncMonoDSPInstance(factory) {\n    const pattern = /\"type\":\\s*\"soundfile\"/;\n    const isDetected = pattern.test(factory.json);\n    if (isDetected) {\n      const memory = this.createMemoryMono(factory);\n      const instance = new WebAssembly.Instance(factory.module, this.createWasmImport(memory));\n      return this.createMonoDSPInstanceAux(instance, factory.json, memory);\n    } else {\n      const instance = new WebAssembly.Instance(factory.module, this.createWasmImport());\n      return this.createMonoDSPInstanceAux(instance, factory.json);\n    }\n  }\n  static async createAsyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory) {\n    const memory = this.createMemoryPoly(voices, voiceFactory, effectFactory);\n    const voiceInstance = await WebAssembly.instantiate(voiceFactory.module, this.createWasmImport(memory));\n    const voiceFunctions = voiceInstance.exports;\n    const voiceAPI = new FaustDspInstance(voiceFunctions);\n    const mixerAPI = this.createMixerAux(mixerModule, memory);\n    if (effectFactory) {\n      const effectInstance = await WebAssembly.instantiate(effectFactory.module, this.createWasmImport(memory));\n      const effectFunctions = effectInstance.exports;\n      const effectAPI = new FaustDspInstance(effectFunctions);\n      return {\n        memory,\n        voices,\n        voiceAPI,\n        effectAPI,\n        mixerAPI,\n        voiceJSON: voiceFactory.json,\n        effectJSON: effectFactory.json\n      };\n    } else {\n      return {\n        memory,\n        voices,\n        voiceAPI,\n        mixerAPI,\n        voiceJSON: voiceFactory.json\n      };\n    }\n  }\n  static createSyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory) {\n    const memory = this.createMemoryPoly(voices, voiceFactory, effectFactory);\n    const voiceInstance = new WebAssembly.Instance(voiceFactory.module, this.createWasmImport(memory));\n    const voiceFunctions = voiceInstance.exports;\n    const voiceAPI = new FaustDspInstance(voiceFunctions);\n    const mixerAPI = this.createMixerAux(mixerModule, memory);\n    if (effectFactory) {\n      const effectInstance = new WebAssembly.Instance(effectFactory.module, this.createWasmImport(memory));\n      const effectFunctions = effectInstance.exports;\n      const effectAPI = new FaustDspInstance(effectFunctions);\n      return {\n        memory,\n        voices,\n        voiceAPI,\n        effectAPI,\n        mixerAPI,\n        voiceJSON: voiceFactory.json,\n        effectJSON: effectFactory.json\n      };\n    } else {\n      return {\n        memory,\n        voices,\n        voiceAPI,\n        mixerAPI,\n        voiceJSON: voiceFactory.json\n      };\n    }\n  }\n};\nvar FaustWasmInstantiator_default = FaustWasmInstantiator;\n\n// src/FaustSensors.ts\nvar FaustSensors = class _FaustSensors {\n  /**\n   * Function to convert a number to an axis type\n   * \n   * @param value number\n   * @returns axis type\n   */\n  static convertToAxis(value) {\n    switch (value) {\n      case 0:\n        return 0 /* x */;\n      case 1:\n        return 1 /* y */;\n      case 2:\n        return 2 /* z */;\n      default:\n        console.error(\"Error: Axis not found value: \" + value);\n        return 0 /* x */;\n    }\n  }\n  /**\n   * Function to convert a number to a curve type\n   * \n   * @param value number\n   * @returns curve type\n   */\n  static convertToCurve(value) {\n    switch (value) {\n      case 0:\n        return 0 /* Up */;\n      case 1:\n        return 1 /* Down */;\n      case 2:\n        return 2 /* UpDown */;\n      case 3:\n        return 3 /* DownUp */;\n      default:\n        console.error(\"Error: Curve not found value: \" + value);\n        return 0 /* Up */;\n    }\n  }\n  static get Range() {\n    if (!this._Range) {\n      this._Range = class {\n        constructor(x, y) {\n          this.fLo = Math.min(x, y);\n          this.fHi = Math.max(x, y);\n        }\n        clip(x) {\n          if (x < this.fLo)\n            return this.fLo;\n          if (x > this.fHi)\n            return this.fHi;\n          return x;\n        }\n      };\n    }\n    return this._Range;\n  }\n  /**\n   * Interpolator class\n   */\n  static get Interpolator() {\n    if (!this._Interpolator) {\n      this._Interpolator = class {\n        constructor(lo, hi, v1, v2) {\n          this.fRange = new _FaustSensors.Range(lo, hi);\n          if (hi !== lo) {\n            this.fCoef = (v2 - v1) / (hi - lo);\n            this.fOffset = v1 - lo * this.fCoef;\n          } else {\n            this.fCoef = 0;\n            this.fOffset = (v1 + v2) / 2;\n          }\n        }\n        returnMappedValue(v) {\n          var x = this.fRange.clip(v);\n          return this.fOffset + x * this.fCoef;\n        }\n        getLowHigh(amin, amax) {\n          return { amin: this.fRange.fLo, amax: this.fRange.fHi };\n        }\n      };\n    }\n    return this._Interpolator;\n  }\n  /**\n   * Interpolator3pt class, combine two interpolators\n   */\n  static get Interpolator3pt() {\n    if (!this._Interpolator3pt) {\n      this._Interpolator3pt = class {\n        constructor(lo, mid, hi, v1, vMid, v2) {\n          this.fSegment1 = new _FaustSensors.Interpolator(lo, mid, v1, vMid);\n          this.fSegment2 = new _FaustSensors.Interpolator(mid, hi, vMid, v2);\n          this.fMid = mid;\n        }\n        returnMappedValue(x) {\n          return x < this.fMid ? this.fSegment1.returnMappedValue(x) : this.fSegment2.returnMappedValue(x);\n        }\n        getMappingValues(amin, amid, amax) {\n          var lowHighSegment1 = this.fSegment1.getLowHigh(amin, amid);\n          var lowHighSegment2 = this.fSegment2.getLowHigh(amid, amax);\n          return { amin: lowHighSegment1.amin, amid: lowHighSegment2.amin, amax: lowHighSegment2.amax };\n        }\n      };\n    }\n    return this._Interpolator3pt;\n  }\n  /**\n   * UpConverter class, convert accelerometer value to Faust value\n   */\n  static get UpConverter() {\n    if (!this._UpConverter) {\n      this._UpConverter = class {\n        constructor(amin, amid, amax, fmin, fmid, fmax) {\n          this.fActive = true;\n          this.fA2F = new _FaustSensors.Interpolator3pt(amin, amid, amax, fmin, fmid, fmax);\n          this.fF2A = new _FaustSensors.Interpolator3pt(fmin, fmid, fmax, amin, amid, amax);\n        }\n        uiToFaust(x) {\n          return this.fA2F.returnMappedValue(x);\n        }\n        faustToUi(x) {\n          return this.fF2A.returnMappedValue(x);\n        }\n        setMappingValues(amin, amid, amax, min, init, max) {\n          this.fA2F = new _FaustSensors.Interpolator3pt(amin, amid, amax, min, init, max);\n          this.fF2A = new _FaustSensors.Interpolator3pt(min, init, max, amin, amid, amax);\n        }\n        getMappingValues(amin, amid, amax) {\n          return this.fA2F.getMappingValues(amin, amid, amax);\n        }\n        setActive(onOff) {\n          this.fActive = onOff;\n        }\n        getActive() {\n          return this.fActive;\n        }\n      };\n    }\n    return this._UpConverter;\n  }\n  /**\n   * DownConverter class, convert accelerometer value to Faust value\n   */\n  static get DownConverter() {\n    if (!this._DownConverter) {\n      this._DownConverter = class {\n        constructor(amin, amid, amax, fmin, fmid, fmax) {\n          this.fActive = true;\n          this.fA2F = new _FaustSensors.Interpolator3pt(amin, amid, amax, fmax, fmid, fmin);\n          this.fF2A = new _FaustSensors.Interpolator3pt(fmin, fmid, fmax, amax, amid, amin);\n        }\n        uiToFaust(x) {\n          return this.fA2F.returnMappedValue(x);\n        }\n        faustToUi(x) {\n          return this.fF2A.returnMappedValue(x);\n        }\n        setMappingValues(amin, amid, amax, min, init, max) {\n          this.fA2F = new _FaustSensors.Interpolator3pt(amin, amid, amax, max, init, min);\n          this.fF2A = new _FaustSensors.Interpolator3pt(min, init, max, amax, amid, amin);\n        }\n        getMappingValues(amin, amid, amax) {\n          return this.fA2F.getMappingValues(amin, amid, amax);\n        }\n        setActive(onOff) {\n          this.fActive = onOff;\n        }\n        getActive() {\n          return this.fActive;\n        }\n      };\n    }\n    return this._DownConverter;\n  }\n  /**\n   * UpDownConverter class, convert accelerometer value to Faust value\n   */\n  static get UpDownConverter() {\n    if (!this._UpDownConverter) {\n      this._UpDownConverter = class {\n        constructor(amin, amid, amax, fmin, fmid, fmax) {\n          this.fActive = true;\n          this.fA2F = new _FaustSensors.Interpolator3pt(amin, amid, amax, fmin, fmax, fmin);\n          this.fF2A = new _FaustSensors.Interpolator(fmin, fmax, amin, amax);\n        }\n        uiToFaust(x) {\n          return this.fA2F.returnMappedValue(x);\n        }\n        faustToUi(x) {\n          return this.fF2A.returnMappedValue(x);\n        }\n        setMappingValues(amin, amid, amax, min, init, max) {\n          this.fA2F = new _FaustSensors.Interpolator3pt(amin, amid, amax, min, max, min);\n          this.fF2A = new _FaustSensors.Interpolator(min, max, amin, amax);\n        }\n        getMappingValues(amin, amid, amax) {\n          return this.fA2F.getMappingValues(amin, amid, amax);\n        }\n        setActive(onOff) {\n          this.fActive = onOff;\n        }\n        getActive() {\n          return this.fActive;\n        }\n      };\n    }\n    return this._UpDownConverter;\n  }\n  static get DownUpConverter() {\n    if (!this._DownUpConverter) {\n      this._DownUpConverter = class {\n        constructor(amin, amid, amax, fmin, fmid, fmax) {\n          this.fActive = true;\n          this.fA2F = new _FaustSensors.Interpolator3pt(amin, amid, amax, fmax, fmin, fmax);\n          this.fF2A = new _FaustSensors.Interpolator(fmin, fmax, amin, amax);\n        }\n        uiToFaust(x) {\n          return this.fA2F.returnMappedValue(x);\n        }\n        faustToUi(x) {\n          return this.fF2A.returnMappedValue(x);\n        }\n        setMappingValues(amin, amid, amax, min, init, max) {\n          this.fA2F = new _FaustSensors.Interpolator3pt(amin, amid, amax, max, min, max);\n          this.fF2A = new _FaustSensors.Interpolator(min, max, amin, amax);\n        }\n        getMappingValues(amin, amid, amax) {\n          return this.fA2F.getMappingValues(amin, amid, amax);\n        }\n        setActive(onOff) {\n          this.fActive = onOff;\n        }\n        getActive() {\n          return this.fActive;\n        }\n      };\n    }\n    return this._DownUpConverter;\n  }\n  /**\n   * Public function to build the accelerometer handler\n   *\n   * @returns `UpdatableValueConverter` built for the given curve\n   */\n  static buildHandler(curve, amin, amid, amax, min, init, max) {\n    switch (curve) {\n      case 0 /* Up */:\n        return new _FaustSensors.UpConverter(amin, amid, amax, min, init, max);\n      case 1 /* Down */:\n        return new _FaustSensors.DownConverter(amin, amid, amax, min, init, max);\n      case 2 /* UpDown */:\n        return new _FaustSensors.UpDownConverter(amin, amid, amax, min, init, max);\n      case 3 /* DownUp */:\n        return new _FaustSensors.DownUpConverter(amin, amid, amax, min, init, max);\n      default:\n        return new _FaustSensors.UpConverter(amin, amid, amax, min, init, max);\n    }\n  }\n};\n\n// src/FaustWebAudioDsp.ts\nvar WasmAllocator = class {\n  constructor(memory, offset) {\n    this.memory = memory;\n    this.allocatedBytes = offset;\n  }\n  /**\n   * Allocates a block of memory of the specified size, returning the pointer to the\n   * beginning of the block. The block is allocated at the current offset and the\n   * offset is incremented by the size of the block.\n   * \n   * @param sizeInBytes The size of the block to allocate in bytes.\n   * @returns The offset (pointer) to the beginning of the allocated block.\n   */\n  alloc(sizeInBytes) {\n    const currentOffset = this.allocatedBytes;\n    const newOffset = currentOffset + sizeInBytes;\n    const totalMemoryBytes = this.memory.buffer.byteLength;\n    if (newOffset > totalMemoryBytes) {\n      const neededPages = Math.ceil((newOffset - totalMemoryBytes) / 65536);\n      console.log(`GROW: ${neededPages} pages`);\n      this.memory.grow(neededPages);\n    }\n    this.allocatedBytes = newOffset;\n    return currentOffset;\n  }\n  /**\n   * Returns the underlying buffer object.\n   * \n   * @returns The buffer object.\n   */\n  getBuffer() {\n    return this.memory.buffer;\n  }\n  /**\n   * Returns the Int32 view of the underlying buffer object.\n   * \n   * @returns The view of the memory buffer as Int32Array.\n   */\n  getInt32Array() {\n    return new Int32Array(this.memory.buffer);\n  }\n  /**\n   * Returns the Int64 view of the underlying buffer object.\n   * \n   * @returns The view of the memory buffer as BigInt64Array.\n   */\n  getInt64Array() {\n    return new BigInt64Array(this.memory.buffer);\n  }\n  /**\n   * Returns the Float32 view of the underlying buffer object.\n   * \n   * @returns The view of the memory buffer as Float32Array.\n   */\n  getFloat32Array() {\n    return new Float32Array(this.memory.buffer);\n  }\n  /**\n   * Returns the Float64 view of the underlying buffer object..\n   * \n   * @returns The view of the memory buffer as Float64Array.\n   */\n  getFloat64Array() {\n    return new Float64Array(this.memory.buffer);\n  }\n};\nvar Soundfile = class _Soundfile {\n  /** Maximum number of soundfile parts. */\n  static get MAX_SOUNDFILE_PARTS() {\n    return 256;\n  }\n  /** Maximum number of channels. */\n  static get MAX_CHAN() {\n    return 64;\n  }\n  /** Maximum buffer size in frames. */\n  static get BUFFER_SIZE() {\n    return 1024;\n  }\n  /** Default sample rate. */\n  static get SAMPLE_RATE() {\n    return 44100;\n  }\n  constructor(allocator, sampleSize, curChan, length, maxChan, totalParts) {\n    this.fSampleSize = sampleSize;\n    this.fIntSize = this.fSampleSize;\n    this.fPtrSize = 4;\n    this.fAllocator = allocator;\n    console.log(`Soundfile constructor: curChan: ${curChan}, length: ${length}, maxChan: ${maxChan}, totalParts: ${totalParts}`);\n    this.fPtr = allocator.alloc(4 * this.fPtrSize);\n    this.fLength = allocator.alloc(_Soundfile.MAX_SOUNDFILE_PARTS * this.fIntSize);\n    this.fSR = allocator.alloc(_Soundfile.MAX_SOUNDFILE_PARTS * this.fIntSize);\n    this.fOffset = allocator.alloc(_Soundfile.MAX_SOUNDFILE_PARTS * this.fIntSize);\n    this.fBuffers = this.allocBuffers(curChan, length, maxChan);\n    const HEAP32 = this.fAllocator.getInt32Array();\n    HEAP32[this.fPtr >> 2] = this.fBuffers;\n    HEAP32[this.fPtr + this.fPtrSize >> 2] = this.fLength;\n    HEAP32[this.fPtr + 2 * this.fPtrSize >> 2] = this.fSR;\n    HEAP32[this.fPtr + 3 * this.fPtrSize >> 2] = this.fOffset;\n    for (let chan = 0; chan < curChan; chan++) {\n      const buffer = HEAP32[(this.fBuffers >> 2) + chan];\n      console.log(`allocBuffers AFTER: ${chan} - ${buffer}`);\n    }\n  }\n  allocBuffers(curChan, length, maxChan) {\n    const buffers = this.fAllocator.alloc(maxChan * this.fPtrSize);\n    console.log(`allocBuffers buffers: ${buffers}`);\n    for (let chan = 0; chan < curChan; chan++) {\n      const buffer = this.fAllocator.alloc(length * this.fSampleSize);\n      const HEAP32 = this.fAllocator.getInt32Array();\n      HEAP32[(buffers >> 2) + chan] = buffer;\n    }\n    return buffers;\n  }\n  shareBuffers(curChan, maxChan) {\n    const HEAP32 = this.fAllocator.getInt32Array();\n    for (let chan = curChan; chan < maxChan; chan++) {\n      HEAP32[(this.fBuffers >> 2) + chan] = HEAP32[(this.fBuffers >> 2) + chan % curChan];\n    }\n  }\n  copyToOut(part, maxChannels, offset, audioData) {\n    if (this.fIntSize === 4) {\n      const HEAP32 = this.fAllocator.getInt32Array();\n      HEAP32[(this.fLength >> Math.log2(this.fIntSize)) + part] = audioData.audioBuffer[0].length;\n      HEAP32[(this.fSR >> Math.log2(this.fIntSize)) + part] = audioData.sampleRate;\n      HEAP32[(this.fOffset >> Math.log2(this.fIntSize)) + part] = offset;\n    } else {\n      const HEAP64 = this.fAllocator.getInt64Array();\n      HEAP64[(this.fLength >> Math.log2(this.fIntSize)) + part] = BigInt(audioData.audioBuffer[0].length);\n      HEAP64[(this.fSR >> Math.log2(this.fIntSize)) + part] = BigInt(audioData.sampleRate);\n      HEAP64[(this.fOffset >> Math.log2(this.fIntSize)) + part] = BigInt(offset);\n    }\n    console.log(`copyToOut: part: ${part}, maxChannels: ${maxChannels}, offset: ${offset}, buffer: ${audioData}`);\n    if (this.fSampleSize === 8) {\n      this.copyToOutReal64(maxChannels, offset, audioData);\n    } else {\n      this.copyToOutReal32(maxChannels, offset, audioData);\n    }\n  }\n  copyToOutReal32(maxChannels, offset, audioData) {\n    const HEAP32 = this.fAllocator.getInt32Array();\n    const HEAPF = this.fAllocator.getFloat32Array();\n    for (let chan = 0; chan < audioData.audioBuffer.length; chan++) {\n      const input = audioData.audioBuffer[chan];\n      const output = HEAP32[(this.fBuffers >> 2) + chan];\n      const begin = output + offset * this.fSampleSize >> Math.log2(this.fSampleSize);\n      const end = output + (offset + input.length) * this.fSampleSize >> Math.log2(this.fSampleSize);\n      console.log(`copyToOutReal32 begin: ${begin}, end: ${end}, delta: ${end - begin}`);\n      const outputReal = HEAPF.subarray(\n        output + offset * this.fSampleSize >> Math.log2(this.fSampleSize),\n        output + (offset + input.length) * this.fSampleSize >> Math.log2(this.fSampleSize)\n      );\n      for (let sample = 0; sample < input.length; sample++) {\n        outputReal[sample] = input[sample];\n      }\n    }\n  }\n  copyToOutReal64(maxChannels, offset, audioData) {\n    const HEAP32 = this.fAllocator.getInt32Array();\n    const HEAPF = this.fAllocator.getFloat64Array();\n    for (let chan = 0; chan < audioData.audioBuffer.length; chan++) {\n      const input = audioData.audioBuffer[chan];\n      const output = HEAP32[(this.fBuffers >> 2) + chan];\n      const begin = output + offset * this.fSampleSize >> Math.log2(this.fSampleSize);\n      const end = output + (offset + input.length) * this.fSampleSize >> Math.log2(this.fSampleSize);\n      console.log(`copyToOutReal64 begin: ${begin}, end: ${end}, delta: ${end - begin}`);\n      const outputReal = HEAPF.subarray(\n        output + offset * this.fSampleSize >> Math.log2(this.fSampleSize),\n        output + (offset + input.length) * this.fSampleSize >> Math.log2(this.fSampleSize)\n      );\n      for (let sample = 0; sample < input.length; sample++) {\n        outputReal[sample] = input[sample];\n      }\n    }\n  }\n  emptyFile(part, offset) {\n    if (this.fIntSize === 4) {\n      const HEAP32 = this.fAllocator.getInt32Array();\n      HEAP32[(this.fLength >> Math.log2(this.fIntSize)) + part] = _Soundfile.BUFFER_SIZE;\n      HEAP32[(this.fSR >> Math.log2(this.fIntSize)) + part] = _Soundfile.SAMPLE_RATE;\n      HEAP32[(this.fOffset >> Math.log2(this.fIntSize)) + part] = offset;\n    } else {\n      const HEAP64 = this.fAllocator.getInt64Array();\n      HEAP64[(this.fLength >> Math.log2(this.fIntSize)) + part] = BigInt(_Soundfile.BUFFER_SIZE);\n      HEAP64[(this.fSR >> Math.log2(this.fIntSize)) + part] = BigInt(_Soundfile.SAMPLE_RATE);\n      HEAP64[(this.fOffset >> Math.log2(this.fIntSize)) + part] = BigInt(offset);\n    }\n    return offset + _Soundfile.BUFFER_SIZE;\n  }\n  displayMemory(where = \"\", mem = false) {\n    console.log(\"Soundfile memory: \" + where);\n    console.log(`fPtr: ${this.fPtr}`);\n    console.log(`fBuffers: ${this.fBuffers}`);\n    console.log(`fLength: ${this.fLength}`);\n    console.log(`fSR: ${this.fSR}`);\n    console.log(`fOffset: ${this.fOffset}`);\n    const HEAP32 = this.fAllocator.getInt32Array();\n    if (mem)\n      console.log(`HEAP32: ${HEAP32}`);\n    console.log(`HEAP32[this.fPtr >> 2]: ${HEAP32[this.fPtr >> 2]}`);\n    console.log(`HEAP32[(this.fPtr + ptrSize) >> 2]: ${HEAP32[this.fPtr + this.fPtrSize >> 2]}`);\n    console.log(`HEAP32[(this.fPtr + 2 * ptrSize) >> 2]: ${HEAP32[this.fPtr + 2 * this.fPtrSize >> 2]}`);\n    console.log(`HEAP32[(this.fPtr + 3 * ptrSize) >> 2]: ${HEAP32[this.fPtr + 3 * this.fPtrSize >> 2]}`);\n  }\n  // Return the pointer to the soundfile structure in wasm memory\n  getPtr() {\n    return this.fPtr;\n  }\n  getHEAP32() {\n    return this.fAllocator.getInt32Array();\n  }\n  getHEAPFloat32() {\n    return this.fAllocator.getFloat32Array();\n  }\n  getHEAPFloat64() {\n    return this.fAllocator.getFloat64Array();\n  }\n};\nvar FaustBaseWebAudioDsp = class _FaustBaseWebAudioDsp {\n  constructor(sampleSize, bufferSize, soundfiles) {\n    this.fOutputHandler = null;\n    this.fComputeHandler = null;\n    // To handle MIDI events plot\n    this.fPlotHandler = null;\n    this.fCachedEvents = [];\n    this.fBufferNum = 0;\n    this.fInChannels = [];\n    this.fOutChannels = [];\n    this.fOutputsTimer = 5;\n    // UI items path\n    this.fInputsItems = [];\n    this.fOutputsItems = [];\n    this.fDescriptor = [];\n    // Soundfile handling\n    this.fSoundfiles = [];\n    this.fSoundfileBuffers = {};\n    // MIDI handling\n    this.fPitchwheelLabel = [];\n    this.fCtrlLabel = new Array(128).fill(null).map(() => []);\n    this.fPathTable = {};\n    this.fUICallback = (item) => {\n      if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n        this.fOutputsItems.push(item.address);\n        this.fPathTable[item.address] = item.index;\n      } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n        this.fInputsItems.push(item.address);\n        this.fPathTable[item.address] = item.index;\n        this.fDescriptor.push(item);\n        if (!item.meta)\n          return;\n        item.meta.forEach((meta) => {\n          const { midi, acc, gyr } = meta;\n          if (midi) {\n            const strMidi = midi.trim();\n            if (strMidi === \"pitchwheel\") {\n              const matched = strMidi.match(/^pitchwheel\\s(\\d+)/);\n              if (matched) {\n                this.fPitchwheelLabel.push({ path: item.address, chan: parseInt(matched[1]), min: item.min, max: item.max });\n              } else {\n                this.fPitchwheelLabel.push({ path: item.address, chan: 0, min: item.min, max: item.max });\n              }\n            } else {\n              const matched2 = strMidi.match(/^ctrl\\s(\\d+)\\s(\\d+)/);\n              const matched1 = strMidi.match(/^ctrl\\s(\\d+)/);\n              if (matched2) {\n                this.fCtrlLabel[parseInt(matched2[1])].push({ path: item.address, chan: parseInt(matched2[2]), min: item.min, max: item.max });\n              } else if (matched1) {\n                this.fCtrlLabel[parseInt(matched1[1])].push({ path: item.address, chan: 0, min: item.min, max: item.max });\n              }\n            }\n          }\n          if (acc) {\n            const numAcc = acc.trim().split(\" \").map(Number);\n            this.setupAccHandler(item.address, FaustSensors.convertToAxis(numAcc[0]), FaustSensors.convertToCurve(numAcc[1]), numAcc[2], numAcc[3], numAcc[4], item.min, item.init, item.max);\n          }\n          if (gyr) {\n            const numAcc = gyr.trim().split(\" \").map(Number);\n            this.setupGyrHandler(item.address, FaustSensors.convertToAxis(numAcc[0]), FaustSensors.convertToCurve(numAcc[1]), numAcc[2], numAcc[3], numAcc[4], item.min, item.init, item.max);\n          }\n        });\n      } else if (item.type === \"soundfile\") {\n        this.fSoundfiles.push({ name: item.label, url: item.url, index: item.index, basePtr: -1 });\n      }\n    };\n    // Audio callback\n    this.fProcessing = false;\n    this.fDestroyed = false;\n    this.fFirstCall = true;\n    this.fBufferSize = bufferSize;\n    this.fPtrSize = sampleSize;\n    this.fSampleSize = sampleSize;\n    this.fSoundfileBuffers = soundfiles;\n    this.fAcc = { x: [], y: [], z: [] };\n    this.fGyr = { x: [], y: [], z: [] };\n  }\n  // Tools\n  static remap(v, mn0, mx0, mn1, mx1) {\n    return (v - mn0) / (mx0 - mn0) * (mx1 - mn1) + mn1;\n  }\n  // JSON parsing functions\n  static parseUI(ui, callback) {\n    ui.forEach((group) => this.parseGroup(group, callback));\n  }\n  static parseGroup(group, callback) {\n    if (group.items) {\n      this.parseItems(group.items, callback);\n    }\n  }\n  static parseItems(items, callback) {\n    items.forEach((item) => this.parseItem(item, callback));\n  }\n  static parseItem(item, callback) {\n    if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n      this.parseItems(item.items, callback);\n    } else {\n      callback(item);\n    }\n  }\n  /** Split the soundfile names and return an array of names */\n  static splitSoundfileNames(input) {\n    let trimmed = input.replace(/^\\{|\\}$/g, \"\");\n    return trimmed.split(\";\").map((str) => str.length <= 2 ? \"\" : str.substring(1, str.length - 1));\n  }\n  get hasAccInput() {\n    return this.fAcc.x.length + this.fAcc.y.length + this.fAcc.z.length > 0;\n  }\n  propagateAcc(accelerationIncludingGravity, invert = false) {\n    const { x, y, z } = accelerationIncludingGravity;\n    if (invert) {\n      if (x !== null)\n        this.fAcc.x.forEach((handler) => handler(-x));\n      if (y !== null)\n        this.fAcc.y.forEach((handler) => handler(-y));\n      if (z !== null)\n        this.fAcc.z.forEach((handler) => handler(-z));\n    } else {\n      if (x !== null)\n        this.fAcc.x.forEach((handler) => handler(x));\n      if (y !== null)\n        this.fAcc.y.forEach((handler) => handler(y));\n      if (z !== null)\n        this.fAcc.z.forEach((handler) => handler(z));\n    }\n  }\n  get hasGyrInput() {\n    return this.fGyr.x.length + this.fGyr.y.length + this.fGyr.z.length > 0;\n  }\n  propagateGyr(event) {\n    const { alpha, beta, gamma } = event;\n    if (alpha !== null)\n      this.fGyr.x.forEach((handler) => handler(alpha));\n    if (beta !== null)\n      this.fGyr.y.forEach((handler) => handler(beta));\n    if (gamma !== null)\n      this.fGyr.z.forEach((handler) => handler(gamma));\n  }\n  /** Build the accelerometer handler */\n  setupAccHandler(path, axis, curve, amin, amid, amax, min, init, max) {\n    const handler = FaustSensors.buildHandler(curve, amin, amid, amax, min, init, max);\n    switch (axis) {\n      case 0 /* x */:\n        this.fAcc.x.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n        break;\n      case 1 /* y */:\n        this.fAcc.y.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n        break;\n      case 2 /* z */:\n        this.fAcc.z.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n        break;\n    }\n  }\n  /** Build the gyroscope handler */\n  setupGyrHandler(path, axis, curve, amin, amid, amax, min, init, max) {\n    const handler = FaustSensors.buildHandler(curve, amin, amid, amax, min, init, max);\n    switch (axis) {\n      case 0 /* x */:\n        this.fGyr.x.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n        break;\n      case 1 /* y */:\n        this.fGyr.y.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n        break;\n      case 2 /* z */:\n        this.fGyr.z.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n        break;\n    }\n  }\n  static extractUrlsFromMeta(dspMeta) {\n    const soundfilesEntry = dspMeta.meta.find((entry) => entry.soundfiles !== void 0);\n    if (soundfilesEntry) {\n      return soundfilesEntry.soundfiles.split(\";\").filter((url) => url !== \"\");\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Load a soundfile possibly containing several parts in the DSP struct.\n   * Soundfile pointers are located at 'index' offset, to be read in the JSON file.\n   * The DSP struct is located at baseDSP in the wasm memory, \n   * either a monophonic DSP, or a voice in a polyphonic context.\n   * \n   * @param allocator : the wasm memory allocator\n   * @param baseDSP : the base DSP in the wasm memory\n   * @param name : the name of the soundfile\n   * @param url : the url of the soundfile\n   */\n  loadSoundfile(allocator, baseDSP, name, url) {\n    console.log(`Soundfile ${name} paths: ${url}`);\n    const soundfileIds = _FaustBaseWebAudioDsp.splitSoundfileNames(url);\n    const item = this.fSoundfiles.find((item2) => item2.url === url);\n    if (!item)\n      throw new Error(`Soundfile with ${url} cannot be found !}`);\n    if (item.basePtr !== -1) {\n      const HEAP32 = allocator.getInt32Array();\n      console.log(`Soundfile CACHE ${url}} : ${name} loaded at ${item.basePtr} in wasm memory with index ${item.index}`);\n      HEAP32[baseDSP + item.index >> 2] = item.basePtr;\n    } else {\n      const soundfile = this.createSoundfile(allocator, soundfileIds, this.fSoundfileBuffers);\n      if (soundfile) {\n        const HEAP32 = soundfile.getHEAP32();\n        item.basePtr = soundfile.getPtr();\n        console.log(`Soundfile ${name} loaded at ${item.basePtr} in wasm memory with index ${item.index}`);\n        HEAP32[baseDSP + item.index >> 2] = item.basePtr;\n      } else {\n        console.log(`Soundfile ${name} for ${url} cannot be created !}`);\n      }\n    }\n  }\n  createSoundfile(allocator, soundfileIdList, soundfiles, maxChan = Soundfile.MAX_CHAN) {\n    let curChan = 1;\n    let totalLength = 0;\n    for (const soundfileId of soundfileIdList) {\n      let chan = 0;\n      let len = 0;\n      const audioData = soundfiles[soundfileId];\n      if (audioData) {\n        chan = audioData.audioBuffer.length;\n        len = audioData.audioBuffer[0].length;\n      } else {\n        len = Soundfile.BUFFER_SIZE;\n        chan = 1;\n      }\n      curChan = Math.max(curChan, chan);\n      totalLength += len;\n    }\n    totalLength += (Soundfile.MAX_SOUNDFILE_PARTS - soundfileIdList.length) * Soundfile.BUFFER_SIZE;\n    const soundfile = new Soundfile(allocator, this.fSampleSize, curChan, totalLength, maxChan, soundfileIdList.length);\n    let offset = 0;\n    for (let part = 0; part < soundfileIdList.length; part++) {\n      const soundfileId = soundfileIdList[part];\n      const audioData = soundfiles[soundfileId];\n      if (audioData) {\n        soundfile.copyToOut(part, maxChan, offset, audioData);\n        offset += audioData.audioBuffer[0].length;\n      } else {\n        offset = soundfile.emptyFile(part, offset);\n      }\n    }\n    for (let part = soundfileIdList.length; part < Soundfile.MAX_SOUNDFILE_PARTS; part++) {\n      offset = soundfile.emptyFile(part, offset);\n    }\n    soundfile.shareBuffers(curChan, maxChan);\n    return soundfile;\n  }\n  /** \n   * Init soundfiles memory.\n   * \n   * @param allocator : the wasm memory allocator\n   * @param sfReader : the soundfile reader\n   * @param baseDSP : the DSP struct (either a monophonic DSP of polyphonic voice) base DSP in the wasm memory\n  */\n  initSoundfileMemory(allocator, baseDSP) {\n    for (const { name, url } of this.fSoundfiles) {\n      this.loadSoundfile(allocator, baseDSP, name, url);\n    }\n    ;\n  }\n  updateOutputs() {\n    if (this.fOutputsItems.length > 0 && this.fOutputHandler && this.fOutputsTimer-- === 0) {\n      this.fOutputsTimer = 5;\n      this.fOutputsItems.forEach((item) => {\n        var _a;\n        return (_a = this.fOutputHandler) == null ? void 0 : _a.call(this, item, this.getParamValue(item));\n      });\n    }\n  }\n  // Public API\n  metadata(handler) {\n    if (this.fJSONDsp.meta) {\n      this.fJSONDsp.meta.forEach((meta) => handler(Object.keys(meta)[0], meta[Object.keys(meta)[0]]));\n    }\n  }\n  compute(input, output) {\n    return false;\n  }\n  setOutputParamHandler(handler) {\n    this.fOutputHandler = handler;\n  }\n  getOutputParamHandler() {\n    return this.fOutputHandler;\n  }\n  setComputeHandler(handler) {\n    this.fComputeHandler = handler;\n  }\n  getComputeHandler() {\n    return this.fComputeHandler;\n  }\n  setPlotHandler(handler) {\n    this.fPlotHandler = handler;\n  }\n  getPlotHandler() {\n    return this.fPlotHandler;\n  }\n  getNumInputs() {\n    return -1;\n  }\n  getNumOutputs() {\n    return -1;\n  }\n  midiMessage(data) {\n    if (this.fPlotHandler)\n      this.fCachedEvents.push({ data, type: \"midi\" });\n    const cmd = data[0] >> 4;\n    const channel = data[0] & 15;\n    const data1 = data[1];\n    const data2 = data[2];\n    if (cmd === 11)\n      return this.ctrlChange(channel, data1, data2);\n    if (cmd === 14)\n      return this.pitchWheel(channel, data2 * 128 + data1);\n  }\n  ctrlChange(channel, ctrl, value) {\n    if (this.fPlotHandler)\n      this.fCachedEvents.push({ type: \"ctrlChange\", data: [channel, ctrl, value] });\n    if (this.fCtrlLabel[ctrl].length) {\n      this.fCtrlLabel[ctrl].forEach((ctrl2) => {\n        const { path, chan } = ctrl2;\n        if (chan === 0 || channel === chan - 1) {\n          this.setParamValue(path, _FaustBaseWebAudioDsp.remap(value, 0, 127, ctrl2.min, ctrl2.max));\n          if (this.fOutputHandler)\n            this.fOutputHandler(path, this.getParamValue(path));\n        }\n      });\n    }\n  }\n  pitchWheel(channel, wheel) {\n    if (this.fPlotHandler)\n      this.fCachedEvents.push({ type: \"pitchWheel\", data: [channel, wheel] });\n    this.fPitchwheelLabel.forEach((pw) => {\n      const { path, chan } = pw;\n      if (chan === 0 || channel === chan - 1) {\n        this.setParamValue(path, _FaustBaseWebAudioDsp.remap(wheel, 0, 16383, pw.min, pw.max));\n        if (this.fOutputHandler)\n          this.fOutputHandler(path, this.getParamValue(path));\n      }\n    });\n  }\n  setParamValue(path, value) {\n  }\n  getParamValue(path) {\n    return 0;\n  }\n  getParams() {\n    return this.fInputsItems;\n  }\n  getMeta() {\n    return this.fJSONDsp;\n  }\n  getJSON() {\n    return JSON.stringify(this.getMeta());\n  }\n  getUI() {\n    return this.fJSONDsp.ui;\n  }\n  getDescriptors() {\n    return this.fDescriptor;\n  }\n  hasSoundfiles() {\n    return this.fSoundfiles.length > 0;\n  }\n  start() {\n    this.fProcessing = true;\n  }\n  stop() {\n    this.fProcessing = false;\n  }\n  destroy() {\n    this.fDestroyed = true;\n    this.fOutputHandler = null;\n    this.fComputeHandler = null;\n    this.fPlotHandler = null;\n  }\n};\nvar FaustMonoWebAudioDsp = class extends FaustBaseWebAudioDsp {\n  constructor(instance, sampleRate, sampleSize, bufferSize, soundfiles) {\n    super(sampleSize, bufferSize, soundfiles);\n    this.fInstance = instance;\n    console.log(`sampleSize: ${sampleSize} bufferSize: ${bufferSize}`);\n    this.fJSONDsp = JSON.parse(this.fInstance.json);\n    FaustBaseWebAudioDsp.parseUI(this.fJSONDsp.ui, this.fUICallback);\n    this.fEndMemory = this.initMemory();\n    this.fInstance.api.init(this.fDSP, sampleRate);\n    if (this.fSoundfiles.length > 0) {\n      const allocator = new WasmAllocator(this.fInstance.memory, this.fEndMemory);\n      this.initSoundfileMemory(allocator, this.fDSP);\n    }\n  }\n  initMemory() {\n    this.fDSP = 0;\n    const $audio = this.fJSONDsp.size;\n    this.fAudioInputs = $audio;\n    this.fAudioOutputs = this.fAudioInputs + this.getNumInputs() * this.fPtrSize;\n    const $audioInputs = this.fAudioOutputs + this.getNumOutputs() * this.fPtrSize;\n    const $audioOutputs = $audioInputs + this.getNumInputs() * this.fBufferSize * this.fSampleSize;\n    const endMemory = $audioOutputs + this.getNumOutputs() * this.fBufferSize * this.fSampleSize;\n    const HEAP = this.fInstance.memory.buffer;\n    const HEAP32 = new Int32Array(HEAP);\n    const HEAPF = this.fSampleSize === 4 ? new Float32Array(HEAP) : new Float64Array(HEAP);\n    if (this.getNumInputs() > 0) {\n      for (let chan = 0; chan < this.getNumInputs(); chan++) {\n        HEAP32[(this.fAudioInputs >> 2) + chan] = $audioInputs + this.fBufferSize * this.fSampleSize * chan;\n      }\n      const dspInChans = HEAP32.subarray(this.fAudioInputs >> 2, this.fAudioInputs + this.getNumInputs() * this.fPtrSize >> 2);\n      for (let chan = 0; chan < this.getNumInputs(); chan++) {\n        this.fInChannels[chan] = HEAPF.subarray(dspInChans[chan] >> Math.log2(this.fSampleSize), dspInChans[chan] + this.fBufferSize * this.fSampleSize >> Math.log2(this.fSampleSize));\n      }\n    }\n    if (this.getNumOutputs() > 0) {\n      for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n        HEAP32[(this.fAudioOutputs >> 2) + chan] = $audioOutputs + this.fBufferSize * this.fSampleSize * chan;\n      }\n      const dspOutChans = HEAP32.subarray(this.fAudioOutputs >> 2, this.fAudioOutputs + this.getNumOutputs() * this.fPtrSize >> 2);\n      for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n        this.fOutChannels[chan] = HEAPF.subarray(dspOutChans[chan] >> Math.log2(this.fSampleSize), dspOutChans[chan] + this.fBufferSize * this.fSampleSize >> Math.log2(this.fSampleSize));\n      }\n    }\n    return endMemory;\n  }\n  toString() {\n    return `============== Mono Memory layout ==============\n        this.fBufferSize: ${this.fBufferSize}\n        this.fJSONDsp.size: ${this.fJSONDsp.size}\n        this.fAudioInputs: ${this.fAudioInputs}\n        this.fAudioOutputs: ${this.fAudioOutputs}\n        this.fDSP: ${this.fDSP}`;\n  }\n  // Public API\n  compute(input, output) {\n    if (this.fDestroyed)\n      return false;\n    if (!this.fProcessing)\n      return true;\n    if (this.fFirstCall) {\n      this.initMemory();\n      this.fFirstCall = false;\n    }\n    if (typeof input === \"function\") {\n      input(this.fInChannels);\n    } else {\n      if (this.getNumInputs() > 0 && (!input || !input[0] || input[0].length === 0)) {\n        return true;\n      }\n      if (this.getNumOutputs() > 0 && typeof output !== \"function\" && (!output || !output[0] || output[0].length === 0)) {\n        return true;\n      }\n      if (input !== void 0) {\n        for (let chan = 0; chan < Math.min(this.getNumInputs(), input.length); chan++) {\n          const dspInput = this.fInChannels[chan];\n          dspInput.set(input[chan]);\n        }\n      }\n    }\n    if (this.fComputeHandler)\n      this.fComputeHandler(this.fBufferSize);\n    this.fInstance.api.compute(this.fDSP, this.fBufferSize, this.fAudioInputs, this.fAudioOutputs);\n    this.updateOutputs();\n    let forPlot = this.fOutChannels;\n    if (typeof output === \"function\") {\n      output(this.fOutChannels);\n    } else {\n      for (let chan = 0; chan < Math.min(this.getNumOutputs(), output.length); chan++) {\n        const dspOutput = this.fOutChannels[chan];\n        output[chan].set(dspOutput);\n      }\n      forPlot = output;\n    }\n    if (this.fPlotHandler) {\n      this.fPlotHandler(forPlot, this.fBufferNum++, this.fCachedEvents.length ? this.fCachedEvents : void 0);\n      this.fCachedEvents = [];\n    }\n    return true;\n  }\n  metadata(handler) {\n    super.metadata(handler);\n  }\n  getNumInputs() {\n    return this.fInstance.api.getNumInputs(this.fDSP);\n  }\n  getNumOutputs() {\n    return this.fInstance.api.getNumOutputs(this.fDSP);\n  }\n  setParamValue(path, value) {\n    if (this.fPlotHandler)\n      this.fCachedEvents.push({ type: \"param\", data: { path, value } });\n    this.fInstance.api.setParamValue(this.fDSP, this.fPathTable[path], value);\n  }\n  getParamValue(path) {\n    return this.fInstance.api.getParamValue(this.fDSP, this.fPathTable[path]);\n  }\n  getMeta() {\n    return this.fJSONDsp;\n  }\n  getJSON() {\n    return this.fInstance.json;\n  }\n  getDescriptors() {\n    return this.fDescriptor;\n  }\n  getUI() {\n    return this.fJSONDsp.ui;\n  }\n};\nvar FaustWebAudioDspVoice = class _FaustWebAudioDspVoice {\n  constructor($dsp, api, inputItems, pathTable, sampleRate) {\n    this.fFreqLabel = [];\n    this.fGateLabel = [];\n    this.fGainLabel = [];\n    this.fKeyLabel = [];\n    this.fVelLabel = [];\n    // Voice DSP code\n    // Accessed by PolyDSPImp class\n    this.fCurNote = _FaustWebAudioDspVoice.kFreeVoice;\n    this.fNextNote = -1;\n    this.fNextVel = -1;\n    this.fDate = 0;\n    this.fLevel = 0;\n    this.fRelease = 0;\n    this.fDSP = $dsp;\n    this.fAPI = api;\n    this.fAPI.init(this.fDSP, sampleRate);\n    this.extractPaths(inputItems, pathTable);\n  }\n  // Voice state\n  static get kActiveVoice() {\n    return 0;\n  }\n  static get kFreeVoice() {\n    return -1;\n  }\n  static get kReleaseVoice() {\n    return -2;\n  }\n  static get kLegatoVoice() {\n    return -3;\n  }\n  static get kNoVoice() {\n    return -4;\n  }\n  static get VOICE_STOP_LEVEL() {\n    return 5e-4;\n  }\n  static midiToFreq(note) {\n    return 440 * 2 ** ((note - 69) / 12);\n  }\n  static normalizeVelocity(velocity) {\n    return velocity / 127;\n  }\n  extractPaths(inputItems, pathTable) {\n    inputItems.forEach((item) => {\n      if (item.endsWith(\"/gate\")) {\n        this.fGateLabel.push(pathTable[item]);\n      } else if (item.endsWith(\"/freq\")) {\n        this.fFreqLabel.push(pathTable[item]);\n      } else if (item.endsWith(\"/key\")) {\n        this.fKeyLabel.push(pathTable[item]);\n      } else if (item.endsWith(\"/gain\")) {\n        this.fGainLabel.push(pathTable[item]);\n      } else if (item.endsWith(\"/vel\") && item.endsWith(\"/velocity\")) {\n        this.fVelLabel.push(pathTable[item]);\n      }\n    });\n  }\n  // Public API\n  keyOn(pitch, velocity, legato = false) {\n    if (legato) {\n      this.fNextNote = pitch;\n      this.fNextVel = velocity;\n    } else {\n      this.fFreqLabel.forEach((index) => this.fAPI.setParamValue(this.fDSP, index, _FaustWebAudioDspVoice.midiToFreq(pitch)));\n      this.fGateLabel.forEach((index) => this.fAPI.setParamValue(this.fDSP, index, 1));\n      this.fGainLabel.forEach((index) => this.fAPI.setParamValue(this.fDSP, index, _FaustWebAudioDspVoice.normalizeVelocity(velocity)));\n      this.fKeyLabel.forEach((index) => this.fAPI.setParamValue(this.fDSP, index, pitch));\n      this.fVelLabel.forEach((index) => this.fAPI.setParamValue(this.fDSP, index, velocity));\n      this.fCurNote = pitch;\n    }\n  }\n  keyOff(hard = false) {\n    this.fGateLabel.forEach((index) => this.fAPI.setParamValue(this.fDSP, index, 0));\n    if (hard) {\n      this.fCurNote = _FaustWebAudioDspVoice.kFreeVoice;\n    } else {\n      this.fRelease = this.fAPI.getSampleRate(this.fDSP) / 2;\n      this.fCurNote = _FaustWebAudioDspVoice.kReleaseVoice;\n    }\n  }\n  computeLegato(bufferSize, $inputs, $outputZero, $outputsHalf) {\n    let size = bufferSize / 2;\n    this.fGateLabel.forEach((index) => this.fAPI.setParamValue(this.fDSP, index, 0));\n    this.fAPI.compute(this.fDSP, size, $inputs, $outputZero);\n    this.keyOn(this.fNextNote, this.fNextVel);\n    this.fAPI.compute(this.fDSP, size, $inputs, $outputsHalf);\n  }\n  compute(bufferSize, $inputs, $outputs) {\n    this.fAPI.compute(this.fDSP, bufferSize, $inputs, $outputs);\n  }\n  setParamValue(index, value) {\n    this.fAPI.setParamValue(this.fDSP, index, value);\n  }\n  getParamValue(index) {\n    return this.fAPI.getParamValue(this.fDSP, index);\n  }\n};\nvar FaustPolyWebAudioDsp = class _FaustPolyWebAudioDsp extends FaustBaseWebAudioDsp {\n  constructor(instance, sampleRate, sampleSize, bufferSize, soundfiles) {\n    super(sampleSize, bufferSize, soundfiles);\n    this.fInstance = instance;\n    console.log(`sampleSize: ${sampleSize} bufferSize: ${bufferSize}`);\n    this.fJSONDsp = JSON.parse(this.fInstance.voiceJSON);\n    this.fJSONEffect = this.fInstance.effectAPI && this.fInstance.effectJSON ? JSON.parse(this.fInstance.effectJSON) : null;\n    FaustBaseWebAudioDsp.parseUI(this.fJSONDsp.ui, this.fUICallback);\n    if (this.fJSONEffect)\n      FaustBaseWebAudioDsp.parseUI(this.fJSONEffect.ui, this.fUICallback);\n    this.fEndMemory = this.initMemory();\n    this.fVoiceTable = [];\n    for (let voice = 0; voice < this.fInstance.voices; voice++) {\n      this.fVoiceTable.push(new FaustWebAudioDspVoice(\n        this.fJSONDsp.size * voice,\n        this.fInstance.voiceAPI,\n        this.fInputsItems,\n        this.fPathTable,\n        sampleRate\n      ));\n    }\n    if (this.fInstance.effectAPI)\n      this.fInstance.effectAPI.init(this.fEffect, sampleRate);\n    if (this.fSoundfiles.length > 0) {\n      const allocator = new WasmAllocator(this.fInstance.memory, this.fEndMemory);\n      for (let voice = 0; voice < this.fInstance.voices; voice++) {\n        this.initSoundfileMemory(allocator, this.fJSONDsp.size * voice);\n      }\n    }\n  }\n  initMemory() {\n    this.fEffect = this.fJSONDsp.size * this.fInstance.voices;\n    const $audio = this.fEffect + (this.fJSONEffect ? this.fJSONEffect.size : 0);\n    this.fAudioInputs = $audio;\n    this.fAudioOutputs = this.fAudioInputs + this.getNumInputs() * this.fPtrSize;\n    this.fAudioMixing = this.fAudioOutputs + this.getNumOutputs() * this.fPtrSize;\n    this.fAudioMixingHalf = this.fAudioMixing + this.getNumOutputs() * this.fPtrSize;\n    const $audioInputs = this.fAudioMixingHalf + this.getNumOutputs() * this.fPtrSize;\n    const $audioOutputs = $audioInputs + this.getNumInputs() * this.fBufferSize * this.fSampleSize;\n    const $audioMixing = $audioOutputs + this.getNumOutputs() * this.fBufferSize * this.fSampleSize;\n    const endMemory = $audioMixing + this.getNumOutputs() * this.fBufferSize * this.fSampleSize;\n    const HEAP = this.fInstance.memory.buffer;\n    const HEAP32 = new Int32Array(HEAP);\n    const HEAPF = this.fSampleSize === 4 ? new Float32Array(HEAP) : new Float64Array(HEAP);\n    if (this.getNumInputs() > 0) {\n      for (let chan = 0; chan < this.getNumInputs(); chan++) {\n        HEAP32[(this.fAudioInputs >> 2) + chan] = $audioInputs + this.fBufferSize * this.fSampleSize * chan;\n      }\n      const dspInChans = HEAP32.subarray(this.fAudioInputs >> 2, this.fAudioInputs + this.getNumInputs() * this.fPtrSize >> 2);\n      for (let chan = 0; chan < this.getNumInputs(); chan++) {\n        this.fInChannels[chan] = HEAPF.subarray(dspInChans[chan] >> Math.log2(this.fSampleSize), dspInChans[chan] + this.fBufferSize * this.fSampleSize >> Math.log2(this.fSampleSize));\n      }\n    }\n    if (this.getNumOutputs() > 0) {\n      for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n        HEAP32[(this.fAudioOutputs >> 2) + chan] = $audioOutputs + this.fBufferSize * this.fSampleSize * chan;\n        HEAP32[(this.fAudioMixing >> 2) + chan] = $audioMixing + this.fBufferSize * this.fSampleSize * chan;\n        HEAP32[(this.fAudioMixingHalf >> 2) + chan] = $audioMixing + this.fBufferSize * this.fSampleSize * chan + this.fBufferSize / 2 * this.fSampleSize;\n      }\n      const dspOutChans = HEAP32.subarray(this.fAudioOutputs >> 2, this.fAudioOutputs + this.getNumOutputs() * this.fPtrSize >> 2);\n      for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n        this.fOutChannels[chan] = HEAPF.subarray(dspOutChans[chan] >> Math.log2(this.fSampleSize), dspOutChans[chan] + this.fBufferSize * this.fSampleSize >> Math.log2(this.fSampleSize));\n      }\n    }\n    return endMemory;\n  }\n  toString() {\n    return `============== Poly Memory layout ==============\n        this.fBufferSize: ${this.fBufferSize}\n        this.fJSONDsp.size: ${this.fJSONDsp.size}\n        this.fAudioInputs: ${this.fAudioInputs}\n        this.fAudioOutputs: ${this.fAudioOutputs}\n        this.fAudioMixing: ${this.fAudioMixing}\n        this.fAudioMixingHalf: ${this.fAudioMixingHalf}`;\n  }\n  allocVoice(voice, type) {\n    this.fVoiceTable[voice].fDate++;\n    this.fVoiceTable[voice].fCurNote = type;\n    return voice;\n  }\n  getPlayingVoice(pitch) {\n    let voicePlaying = FaustWebAudioDspVoice.kNoVoice;\n    let oldestDatePlaying = Number.MAX_VALUE;\n    for (let voice = 0; voice < this.fInstance.voices; voice++) {\n      if (this.fVoiceTable[voice].fCurNote === pitch) {\n        if (this.fVoiceTable[voice].fDate < oldestDatePlaying) {\n          oldestDatePlaying = this.fVoiceTable[voice].fDate;\n          voicePlaying = voice;\n        }\n      }\n    }\n    return voicePlaying;\n  }\n  getFreeVoice() {\n    for (let voice = 0; voice < this.fInstance.voices; voice++) {\n      if (this.fVoiceTable[voice].fCurNote === FaustWebAudioDspVoice.kFreeVoice) {\n        return this.allocVoice(voice, FaustWebAudioDspVoice.kActiveVoice);\n      }\n    }\n    let voiceRelease = FaustWebAudioDspVoice.kNoVoice;\n    let voicePlaying = FaustWebAudioDspVoice.kNoVoice;\n    let oldestDateRelease = Number.MAX_VALUE;\n    let oldestDatePlaying = Number.MAX_VALUE;\n    for (let voice = 0; voice < this.fInstance.voices; voice++) {\n      if (this.fVoiceTable[voice].fCurNote === FaustWebAudioDspVoice.kReleaseVoice) {\n        if (this.fVoiceTable[voice].fDate < oldestDateRelease) {\n          oldestDateRelease = this.fVoiceTable[voice].fDate;\n          voiceRelease = voice;\n        }\n      } else if (this.fVoiceTable[voice].fDate < oldestDatePlaying) {\n        oldestDatePlaying = this.fVoiceTable[voice].fDate;\n        voicePlaying = voice;\n      }\n    }\n    if (oldestDateRelease !== Number.MAX_VALUE) {\n      console.log(`Steal release voice : voice_date = ${this.fVoiceTable[voiceRelease].fDate} voice = ${voiceRelease}`);\n      return this.allocVoice(voiceRelease, FaustWebAudioDspVoice.kLegatoVoice);\n    }\n    if (oldestDatePlaying !== Number.MAX_VALUE) {\n      console.log(`Steal playing voice : voice_date = ${this.fVoiceTable[voicePlaying].fDate} voice = ${voicePlaying}`);\n      return this.allocVoice(voicePlaying, FaustWebAudioDspVoice.kLegatoVoice);\n    }\n    return FaustWebAudioDspVoice.kNoVoice;\n  }\n  // Public API\n  compute(input, output) {\n    if (this.fDestroyed)\n      return false;\n    if (this.fFirstCall) {\n      this.initMemory();\n      this.fFirstCall = false;\n    }\n    if (!this.fProcessing)\n      return true;\n    if (this.getNumInputs() > 0 && (!input || !input[0] || input[0].length === 0)) {\n      return true;\n    }\n    if (this.getNumOutputs() > 0 && (!output || !output[0] || output[0].length === 0)) {\n      return true;\n    }\n    if (input !== void 0) {\n      for (let chan = 0; chan < Math.min(this.getNumInputs(), input.length); ++chan) {\n        const dspInput = this.fInChannels[chan];\n        dspInput.set(input[chan]);\n      }\n    }\n    if (this.fComputeHandler)\n      this.fComputeHandler(this.fBufferSize);\n    this.fInstance.mixerAPI.clearOutput(this.fBufferSize, this.getNumOutputs(), this.fAudioOutputs);\n    this.fVoiceTable.forEach((voice) => {\n      if (voice.fCurNote === FaustWebAudioDspVoice.kLegatoVoice) {\n        voice.computeLegato(this.fBufferSize, this.fAudioInputs, this.fAudioMixing, this.fAudioMixingHalf);\n        this.fInstance.mixerAPI.fadeOut(this.fBufferSize / 2, this.getNumOutputs(), this.fAudioMixing);\n        voice.fLevel = this.fInstance.mixerAPI.mixCheckVoice(this.fBufferSize, this.getNumOutputs(), this.fAudioMixing, this.fAudioOutputs);\n      } else if (voice.fCurNote !== FaustWebAudioDspVoice.kFreeVoice) {\n        voice.compute(this.fBufferSize, this.fAudioInputs, this.fAudioMixing);\n        voice.fLevel = this.fInstance.mixerAPI.mixCheckVoice(this.fBufferSize, this.getNumOutputs(), this.fAudioMixing, this.fAudioOutputs);\n        voice.fRelease -= this.fBufferSize;\n        if (voice.fCurNote == FaustWebAudioDspVoice.kReleaseVoice && (voice.fLevel < FaustWebAudioDspVoice.VOICE_STOP_LEVEL && voice.fRelease < 0)) {\n          voice.fCurNote = FaustWebAudioDspVoice.kFreeVoice;\n        }\n      }\n    });\n    if (this.fInstance.effectAPI)\n      this.fInstance.effectAPI.compute(this.fEffect, this.fBufferSize, this.fAudioOutputs, this.fAudioOutputs);\n    this.updateOutputs();\n    if (output !== void 0) {\n      for (let chan = 0; chan < Math.min(this.getNumOutputs(), output.length); chan++) {\n        const dspOutput = this.fOutChannels[chan];\n        output[chan].set(dspOutput);\n      }\n      if (this.fPlotHandler) {\n        this.fPlotHandler(output, this.fBufferNum++, this.fCachedEvents.length ? this.fCachedEvents : void 0);\n        this.fCachedEvents = [];\n      }\n    }\n    return true;\n  }\n  getNumInputs() {\n    return this.fInstance.voiceAPI.getNumInputs(0);\n  }\n  getNumOutputs() {\n    return this.fInstance.voiceAPI.getNumOutputs(0);\n  }\n  static findPath(o, p) {\n    if (typeof o !== \"object\") {\n      return false;\n    } else if (o.address) {\n      return o.address === p;\n    } else {\n      for (const k in o) {\n        if (_FaustPolyWebAudioDsp.findPath(o[k], p))\n          return true;\n      }\n      return false;\n    }\n  }\n  setParamValue(path, value) {\n    if (this.fPlotHandler)\n      this.fCachedEvents.push({ type: \"param\", data: { path, value } });\n    if (this.fJSONEffect && _FaustPolyWebAudioDsp.findPath(this.fJSONEffect.ui, path) && this.fInstance.effectAPI) {\n      this.fInstance.effectAPI.setParamValue(this.fEffect, this.fPathTable[path], value);\n    } else {\n      this.fVoiceTable.forEach((voice) => voice.setParamValue(this.fPathTable[path], value));\n    }\n  }\n  getParamValue(path) {\n    if (this.fJSONEffect && _FaustPolyWebAudioDsp.findPath(this.fJSONEffect.ui, path) && this.fInstance.effectAPI) {\n      return this.fInstance.effectAPI.getParamValue(this.fEffect, this.fPathTable[path]);\n    } else {\n      return this.fVoiceTable[0].getParamValue(this.fPathTable[path]);\n    }\n  }\n  getMeta() {\n    const o = this.fJSONDsp;\n    const e = this.fJSONEffect;\n    const r = { ...o };\n    if (e) {\n      r.ui = [{\n        type: \"tgroup\",\n        label: \"Sequencer\",\n        items: [\n          { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n          { type: \"vgroup\", label: \"Effect\", items: e.ui }\n        ]\n      }];\n    } else {\n      r.ui = [{\n        type: \"tgroup\",\n        label: \"Polyphonic\",\n        items: [\n          { type: \"vgroup\", label: \"Voices\", items: o.ui }\n        ]\n      }];\n    }\n    return r;\n  }\n  getJSON() {\n    return JSON.stringify(this.getMeta());\n  }\n  getUI() {\n    return this.getMeta().ui;\n  }\n  getDescriptors() {\n    return this.fDescriptor;\n  }\n  midiMessage(data) {\n    const cmd = data[0] >> 4;\n    const channel = data[0] & 15;\n    const data1 = data[1];\n    const data2 = data[2];\n    if (cmd === 8 || cmd === 9 && data2 === 0)\n      return this.keyOff(channel, data1, data2);\n    else if (cmd === 9)\n      return this.keyOn(channel, data1, data2);\n    else\n      super.midiMessage(data);\n  }\n  ctrlChange(channel, ctrl, value) {\n    if (ctrl === 123 || ctrl === 120) {\n      this.allNotesOff(true);\n    } else {\n      super.ctrlChange(channel, ctrl, value);\n    }\n  }\n  keyOn(channel, pitch, velocity) {\n    if (this.fPlotHandler)\n      this.fCachedEvents.push({ type: \"keyOn\", data: [channel, pitch, velocity] });\n    const voice = this.getFreeVoice();\n    this.fVoiceTable[voice].keyOn(pitch, velocity, this.fVoiceTable[voice].fCurNote == FaustWebAudioDspVoice.kLegatoVoice);\n  }\n  keyOff(channel, pitch, velocity) {\n    if (this.fPlotHandler)\n      this.fCachedEvents.push({ type: \"keyOff\", data: [channel, pitch, velocity] });\n    const voice = this.getPlayingVoice(pitch);\n    if (voice !== FaustWebAudioDspVoice.kNoVoice) {\n      this.fVoiceTable[voice].keyOff();\n    } else {\n      console.log(\"Playing pitch = %d not found\\n\", pitch);\n    }\n  }\n  allNotesOff(hard = true) {\n    this.fCachedEvents.push({ type: \"ctrlChange\", data: [0, 123, 0] });\n    this.fVoiceTable.forEach((voice) => voice.keyOff(hard));\n  }\n};\n\n// src/FaustOfflineProcessor.ts\nvar FaustOfflineProcessor = class {\n  constructor(instance, bufferSize) {\n    this.fDSPCode = instance;\n    this.fBufferSize = bufferSize;\n    this.fInputs = new Array(this.fDSPCode.getNumInputs()).fill(null).map(() => new Float32Array(bufferSize));\n    this.fOutputs = new Array(this.fDSPCode.getNumOutputs()).fill(null).map(() => new Float32Array(bufferSize));\n  }\n  // Public API\n  getParameterDescriptors() {\n    const params = [];\n    const callback = (item) => {\n      let param = null;\n      const polyKeywords = [\"/gate\", \"/freq\", \"/gain\", \"/key\", \"/vel\", \"/velocity\"];\n      const isPolyReserved = \"address\" in item && !!polyKeywords.find((k) => item.address.endsWith(k));\n      if (this.fDSPCode instanceof FaustMonoWebAudioDsp || !isPolyReserved) {\n        if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"nentry\") {\n          param = { name: item.address, defaultValue: item.init || 0, minValue: item.min || 0, maxValue: item.max || 0 };\n        } else if (item.type === \"button\" || item.type === \"checkbox\") {\n          param = { name: item.address, defaultValue: item.init || 0, minValue: 0, maxValue: 1 };\n        }\n      }\n      if (param)\n        params.push(param);\n    };\n    FaustBaseWebAudioDsp.parseUI(this.fDSPCode.getUI(), callback);\n    return params;\n  }\n  compute(input, output) {\n    return this.fDSPCode.compute(input, output);\n  }\n  setOutputParamHandler(handler) {\n    this.fDSPCode.setOutputParamHandler(handler);\n  }\n  getOutputParamHandler() {\n    return this.fDSPCode.getOutputParamHandler();\n  }\n  setComputeHandler(handler) {\n    this.fDSPCode.setComputeHandler(handler);\n  }\n  getComputeHandler() {\n    return this.fDSPCode.getComputeHandler();\n  }\n  setPlotHandler(handler) {\n    this.fDSPCode.setPlotHandler(handler);\n  }\n  getPlotHandler() {\n    return this.fDSPCode.getPlotHandler();\n  }\n  getNumInputs() {\n    return this.fDSPCode.getNumInputs();\n  }\n  getNumOutputs() {\n    return this.fDSPCode.getNumOutputs();\n  }\n  metadata(handler) {\n  }\n  midiMessage(data) {\n    this.fDSPCode.midiMessage(data);\n  }\n  ctrlChange(chan, ctrl, value) {\n    this.fDSPCode.ctrlChange(chan, ctrl, value);\n  }\n  pitchWheel(chan, value) {\n    this.fDSPCode.pitchWheel(chan, value);\n  }\n  setParamValue(path, value) {\n    this.fDSPCode.setParamValue(path, value);\n  }\n  getParamValue(path) {\n    return this.fDSPCode.getParamValue(path);\n  }\n  getParams() {\n    return this.fDSPCode.getParams();\n  }\n  getMeta() {\n    return this.fDSPCode.getMeta();\n  }\n  getJSON() {\n    return this.fDSPCode.getJSON();\n  }\n  getDescriptors() {\n    return this.fDSPCode.getDescriptors();\n  }\n  getUI() {\n    return this.fDSPCode.getUI();\n  }\n  start() {\n    this.fDSPCode.start();\n  }\n  stop() {\n    this.fDSPCode.stop();\n  }\n  destroy() {\n    this.fDSPCode.destroy();\n  }\n  get hasAccInput() {\n    return this.fDSPCode.hasAccInput;\n  }\n  propagateAcc(accelerationIncludingGravity, invert = false) {\n    this.fDSPCode.propagateAcc(accelerationIncludingGravity, invert);\n  }\n  get hasGyrInput() {\n    return this.fDSPCode.hasGyrInput;\n  }\n  propagateGyr(event) {\n    this.fDSPCode.propagateGyr(event);\n  }\n  /**\n   * Render frames in an array.\n   *\n   * @param inputs - input signal\n   * @param length - the number of frames to render (default: bufferSize)\n   * @param onUpdate - a callback after each buffer calculated, with an argument \"current sample\"\n   * @return an array of Float32Array with the rendered frames\n   */\n  render(inputs = [], length = this.fBufferSize, onUpdate) {\n    let l = 0;\n    const outputs = new Array(this.fDSPCode.getNumOutputs()).fill(null).map(() => new Float32Array(length));\n    this.fDSPCode.start();\n    while (l < length) {\n      const sliceLength = Math.min(length - l, this.fBufferSize);\n      for (let i = 0; i < this.fDSPCode.getNumInputs(); i++) {\n        let input;\n        if (inputs[i]) {\n          if (inputs[i].length <= l) {\n            input = new Float32Array(sliceLength);\n          } else if (inputs[i].length > l + sliceLength) {\n            input = inputs[i].subarray(l, l + sliceLength);\n          } else {\n            input = inputs[i].subarray(l, inputs[i].length);\n          }\n        } else {\n          input = new Float32Array(sliceLength);\n        }\n        this.fInputs[i] = input;\n      }\n      this.fDSPCode.compute(this.fInputs, this.fOutputs);\n      for (let i = 0; i < this.fDSPCode.getNumOutputs(); i++) {\n        const output = this.fOutputs[i];\n        if (sliceLength < this.fBufferSize) {\n          outputs[i].set(output.subarray(0, sliceLength), l);\n        } else {\n          outputs[i].set(output, l);\n        }\n      }\n      l += this.fBufferSize;\n      onUpdate == null ? void 0 : onUpdate(l);\n    }\n    this.fDSPCode.stop();\n    return outputs;\n  }\n};\nvar FaustMonoOfflineProcessor = class extends FaustOfflineProcessor {\n};\nvar FaustPolyOfflineProcessor = class extends FaustOfflineProcessor {\n  keyOn(channel, pitch, velocity) {\n    this.fDSPCode.keyOn(channel, pitch, velocity);\n  }\n  keyOff(channel, pitch, velocity) {\n    this.fDSPCode.keyOff(channel, pitch, velocity);\n  }\n  allNotesOff(hard) {\n    this.fDSPCode.allNotesOff(hard);\n  }\n};\nvar FaustOfflineProcessor_default = FaustOfflineProcessor;\n\n// src/FaustSvgDiagrams.ts\nvar FaustSvgDiagrams = class {\n  constructor(compiler) {\n    this.compiler = compiler;\n  }\n  from(name, code, args) {\n    const fs = this.compiler.fs();\n    try {\n      const files2 = fs.readdir(`/${name}-svg/`);\n      files2.filter((file) => file !== \".\" && file !== \"..\").forEach((file) => fs.unlink(`/${name}-svg/${file}`));\n    } catch {\n    }\n    const success = this.compiler.generateAuxFiles(name, code, `-lang wasm -o binary -svg ${args}`);\n    if (!success)\n      throw new Error(this.compiler.getErrorMessage());\n    const svgs = {};\n    const files = fs.readdir(`/${name}-svg/`);\n    files.filter((file) => file !== \".\" && file !== \"..\").forEach((file) => svgs[file] = fs.readFile(`/${name}-svg/${file}`, { encoding: \"utf8\" }));\n    return svgs;\n  }\n};\nvar FaustSvgDiagrams_default = FaustSvgDiagrams;\n\n// src/FaustCmajor.ts\nvar FaustCmajor = class {\n  constructor(compiler) {\n    this.fCompiler = compiler;\n  }\n  compile(name, code, args) {\n    const fs = this.fCompiler.fs();\n    const success = this.fCompiler.generateAuxFiles(name, code, `-lang cmajor-hybrid -cn ${name} -o ${name}.cmajor`);\n    return success ? fs.readFile(`${name}.cmajor`, { encoding: \"utf8\" }) : \"\";\n  }\n};\nvar FaustCmajor_default = FaustCmajor;\n\n// src/LibFaust.ts\nvar LibFaust = class {\n  constructor(module) {\n    this.fModule = module;\n    this.fCompiler = new module.libFaustWasm();\n    this.fFileSystem = this.fModule.FS;\n  }\n  module() {\n    return this.fModule;\n  }\n  fs() {\n    return this.fFileSystem;\n  }\n  version() {\n    return this.fCompiler.version();\n  }\n  createDSPFactory(name, code, args, useInternalMemory) {\n    return this.fCompiler.createDSPFactory(name, code, args, useInternalMemory);\n  }\n  deleteDSPFactory(cFactory) {\n    return this.fCompiler.deleteDSPFactory(cFactory);\n  }\n  expandDSP(name, code, args) {\n    return this.fCompiler.expandDSP(name, code, args);\n  }\n  generateAuxFiles(name, code, args) {\n    return this.fCompiler.generateAuxFiles(name, code, args);\n  }\n  deleteAllDSPFactories() {\n    return this.fCompiler.deleteAllDSPFactories();\n  }\n  getErrorAfterException() {\n    return this.fCompiler.getErrorAfterException();\n  }\n  cleanupAfterException() {\n    return this.fCompiler.cleanupAfterException();\n  }\n  getInfos(what) {\n    return this.fCompiler.getInfos(what);\n  }\n  toString() {\n    return `LibFaust module: ${this.fModule}, compiler: ${this.fCompiler}`;\n  }\n};\nvar LibFaust_default = LibFaust;\n\n// src/WavEncoder.ts\nvar WavEncoder = class {\n  static encode(audioBuffer, options) {\n    const numberOfChannels = audioBuffer.length;\n    const length = audioBuffer[0].length;\n    const { shared, float } = options;\n    const bitDepth = float ? 32 : options.bitDepth | 0 || 16;\n    const byteDepth = bitDepth >> 3;\n    const byteLength = length * numberOfChannels * byteDepth;\n    const AB = shared ? globalThis.SharedArrayBuffer || globalThis.ArrayBuffer : globalThis.ArrayBuffer;\n    const ab = new AB((44 + byteLength) * Uint8Array.BYTES_PER_ELEMENT);\n    const dataView = new DataView(ab);\n    const writer = new Writer(dataView);\n    const format = {\n      formatId: float ? 3 : 1,\n      float: !!float,\n      numberOfChannels,\n      sampleRate: options.sampleRate,\n      symmetric: !!options.symmetric,\n      length,\n      bitDepth,\n      byteDepth\n    };\n    this.writeHeader(writer, format);\n    this.writeData(writer, audioBuffer, format);\n    return ab;\n  }\n  static writeHeader(writer, format) {\n    const { formatId, sampleRate, bitDepth, numberOfChannels, length, byteDepth } = format;\n    writer.string(\"RIFF\");\n    writer.uint32(writer.dataView.byteLength - 8);\n    writer.string(\"WAVE\");\n    writer.string(\"fmt \");\n    writer.uint32(16);\n    writer.uint16(formatId);\n    writer.uint16(numberOfChannels);\n    writer.uint32(sampleRate);\n    writer.uint32(sampleRate * numberOfChannels * byteDepth);\n    writer.uint16(numberOfChannels * byteDepth);\n    writer.uint16(bitDepth);\n    writer.string(\"data\");\n    writer.uint32(length * numberOfChannels * byteDepth);\n    return writer.pos;\n  }\n  static writeData(writer, audioBuffer, format) {\n    const { bitDepth, float, length, numberOfChannels, symmetric } = format;\n    if (bitDepth === 32 && float) {\n      const { dataView, pos } = writer;\n      const ab = dataView.buffer;\n      const f32View = new Float32Array(ab, pos);\n      if (numberOfChannels === 1) {\n        f32View.set(audioBuffer[0]);\n        return;\n      }\n      for (let ch = 0; ch < numberOfChannels; ch++) {\n        const channel = audioBuffer[ch];\n        for (let i = 0; i < length; i++) {\n          f32View[i * numberOfChannels + ch] = channel[i];\n        }\n      }\n      return;\n    }\n    const encoderOption = float ? \"f\" : symmetric ? \"s\" : \"\";\n    const methodName = \"pcm\" + bitDepth + encoderOption;\n    if (!writer[methodName]) {\n      throw new TypeError(\"Not supported bit depth: \" + bitDepth);\n    }\n    const write = writer[methodName].bind(writer);\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < numberOfChannels; j++) {\n        write(audioBuffer[j][i]);\n      }\n    }\n  }\n};\nvar Writer = class {\n  constructor(dataView) {\n    this.pos = 0;\n    this.dataView = dataView;\n  }\n  int16(value) {\n    this.dataView.setInt16(this.pos, value, true);\n    this.pos += 2;\n  }\n  uint16(value) {\n    this.dataView.setUint16(this.pos, value, true);\n    this.pos += 2;\n  }\n  uint32(value) {\n    this.dataView.setUint32(this.pos, value, true);\n    this.pos += 4;\n  }\n  string(value) {\n    for (let i = 0, imax = value.length; i < imax; i++) {\n      this.dataView.setUint8(this.pos++, value.charCodeAt(i));\n    }\n  }\n  pcm8(valueIn) {\n    let value = valueIn;\n    value = Math.max(-1, Math.min(value, 1));\n    value = (value * 0.5 + 0.5) * 255;\n    value = Math.round(value) | 0;\n    this.dataView.setUint8(\n      this.pos,\n      value\n      /* , true*/\n    );\n    this.pos += 1;\n  }\n  pcm8s(valueIn) {\n    let value = valueIn;\n    value = Math.round(value * 128) + 128;\n    value = Math.max(0, Math.min(value, 255));\n    this.dataView.setUint8(\n      this.pos,\n      value\n      /* , true*/\n    );\n    this.pos += 1;\n  }\n  pcm16(valueIn) {\n    let value = valueIn;\n    value = Math.max(-1, Math.min(value, 1));\n    value = value < 0 ? value * 32768 : value * 32767;\n    value = Math.round(value) | 0;\n    this.dataView.setInt16(this.pos, value, true);\n    this.pos += 2;\n  }\n  pcm16s(valueIn) {\n    let value = valueIn;\n    value = Math.round(value * 32768);\n    value = Math.max(-32768, Math.min(value, 32767));\n    this.dataView.setInt16(this.pos, value, true);\n    this.pos += 2;\n  }\n  pcm24(valueIn) {\n    let value = valueIn;\n    value = Math.max(-1, Math.min(value, 1));\n    value = value < 0 ? 16777216 + value * 8388608 : value * 8388607;\n    value = Math.round(value) | 0;\n    const x0 = value >> 0 & 255;\n    const x1 = value >> 8 & 255;\n    const x2 = value >> 16 & 255;\n    this.dataView.setUint8(this.pos + 0, x0);\n    this.dataView.setUint8(this.pos + 1, x1);\n    this.dataView.setUint8(this.pos + 2, x2);\n    this.pos += 3;\n  }\n  pcm24s(valueIn) {\n    let value = valueIn;\n    value = Math.round(value * 8388608);\n    value = Math.max(-8388608, Math.min(value, 8388607));\n    const x0 = value >> 0 & 255;\n    const x1 = value >> 8 & 255;\n    const x2 = value >> 16 & 255;\n    this.dataView.setUint8(this.pos + 0, x0);\n    this.dataView.setUint8(this.pos + 1, x1);\n    this.dataView.setUint8(this.pos + 2, x2);\n    this.pos += 3;\n  }\n  pcm32(valueIn) {\n    let value = valueIn;\n    value = Math.max(-1, Math.min(value, 1));\n    value = value < 0 ? value * 2147483648 : value * 2147483647;\n    value = Math.round(value) | 0;\n    this.dataView.setInt32(this.pos, value, true);\n    this.pos += 4;\n  }\n  pcm32s(valueIn) {\n    let value = valueIn;\n    value = Math.round(value * 2147483648);\n    value = Math.max(-2147483648, Math.min(value, 2147483647));\n    this.dataView.setInt32(this.pos, value, true);\n    this.pos += 4;\n  }\n  pcm32f(value) {\n    this.dataView.setFloat32(this.pos, value, true);\n    this.pos += 4;\n  }\n};\nvar WavEncoder_default = WavEncoder;\n\n// src/WavDecoder.ts\nvar WavDecoder = class {\n  static decode(buffer, options) {\n    const dataView = new DataView(buffer);\n    const reader = new Reader(dataView);\n    if (reader.string(4) !== \"RIFF\") {\n      throw new TypeError(\"Invalid WAV file\");\n    }\n    reader.uint32();\n    if (reader.string(4) !== \"WAVE\") {\n      throw new TypeError(\"Invalid WAV file\");\n    }\n    let format = null;\n    let audioData = null;\n    do {\n      const chunkType = reader.string(4);\n      const chunkSize = reader.uint32();\n      if (chunkType === \"fmt \") {\n        format = this.decodeFormat(reader, chunkSize);\n      } else if (chunkType === \"data\") {\n        audioData = this.decodeData(reader, chunkSize, format, options || {});\n      } else {\n        reader.skip(chunkSize);\n      }\n    } while (audioData === null);\n    return audioData;\n  }\n  static decodeFormat(reader, chunkSize) {\n    const formats = {\n      1: \"lpcm\",\n      3: \"lpcm\"\n    };\n    const formatId = reader.uint16();\n    if (!formats.hasOwnProperty(formatId)) {\n      throw new TypeError(\"Unsupported format in WAV file: 0x\" + formatId.toString(16));\n    }\n    const format = {\n      formatId,\n      float: formatId === 3,\n      numberOfChannels: reader.uint16(),\n      sampleRate: reader.uint32(),\n      byteRate: reader.uint32(),\n      blockSize: reader.uint16(),\n      bitDepth: reader.uint16()\n    };\n    reader.skip(chunkSize - 16);\n    return format;\n  }\n  static decodeData(reader, chunkSizeIn, format, options) {\n    const chunkSize = Math.min(chunkSizeIn, reader.remain());\n    const length = Math.floor(chunkSize / format.blockSize);\n    const numberOfChannels = format.numberOfChannels;\n    const sampleRate = format.sampleRate;\n    const channelData = new Array(numberOfChannels);\n    for (let ch = 0; ch < numberOfChannels; ch++) {\n      const AB = options.shared ? globalThis.SharedArrayBuffer || globalThis.ArrayBuffer : globalThis.ArrayBuffer;\n      const ab = new AB(length * Float32Array.BYTES_PER_ELEMENT);\n      channelData[ch] = new Float32Array(ab);\n    }\n    this.readPCM(reader, channelData, length, format, options);\n    return {\n      numberOfChannels,\n      length,\n      sampleRate,\n      channelData\n    };\n  }\n  static readPCM(reader, channelData, length, format, options) {\n    const bitDepth = format.bitDepth;\n    const decoderOption = format.float ? \"f\" : options.symmetric ? \"s\" : \"\";\n    const methodName = \"pcm\" + bitDepth + decoderOption;\n    if (!reader[methodName]) {\n      throw new TypeError(\"Not supported bit depth: \" + format.bitDepth);\n    }\n    const read = reader[methodName].bind(reader);\n    const numberOfChannels = format.numberOfChannels;\n    for (let i = 0; i < length; i++) {\n      for (let ch = 0; ch < numberOfChannels; ch++) {\n        channelData[ch][i] = read();\n      }\n    }\n  }\n};\nvar Reader = class {\n  constructor(dataView) {\n    this.pos = 0;\n    this.dataView = dataView;\n  }\n  remain() {\n    return this.dataView.byteLength - this.pos;\n  }\n  skip(n) {\n    this.pos += n;\n  }\n  uint8() {\n    const data = this.dataView.getUint8(this.pos);\n    this.pos += 1;\n    return data;\n  }\n  int16() {\n    const data = this.dataView.getInt16(this.pos, true);\n    this.pos += 2;\n    return data;\n  }\n  uint16() {\n    const data = this.dataView.getUint16(this.pos, true);\n    this.pos += 2;\n    return data;\n  }\n  uint32() {\n    const data = this.dataView.getUint32(this.pos, true);\n    this.pos += 4;\n    return data;\n  }\n  string(n) {\n    let data = \"\";\n    for (let i = 0; i < n; i++) {\n      data += String.fromCharCode(this.uint8());\n    }\n    return data;\n  }\n  pcm8() {\n    const data = this.dataView.getUint8(this.pos) - 128;\n    this.pos += 1;\n    return data < 0 ? data / 128 : data / 127;\n  }\n  pcm8s() {\n    const data = this.dataView.getUint8(this.pos) - 127.5;\n    this.pos += 1;\n    return data / 127.5;\n  }\n  pcm16() {\n    const data = this.dataView.getInt16(this.pos, true);\n    this.pos += 2;\n    return data < 0 ? data / 32768 : data / 32767;\n  }\n  pcm16s() {\n    const data = this.dataView.getInt16(this.pos, true);\n    this.pos += 2;\n    return data / 32768;\n  }\n  pcm24() {\n    const x0 = this.dataView.getUint8(this.pos + 0);\n    const x1 = this.dataView.getUint8(this.pos + 1);\n    const x2 = this.dataView.getUint8(this.pos + 2);\n    const xx = x0 + (x1 << 8) + (x2 << 16);\n    const data = xx > 8388608 ? xx - 16777216 : xx;\n    this.pos += 3;\n    return data < 0 ? data / 8388608 : data / 8388607;\n  }\n  pcm24s() {\n    const x0 = this.dataView.getUint8(this.pos + 0);\n    const x1 = this.dataView.getUint8(this.pos + 1);\n    const x2 = this.dataView.getUint8(this.pos + 2);\n    const xx = x0 + (x1 << 8) + (x2 << 16);\n    const data = xx > 8388608 ? xx - 16777216 : xx;\n    this.pos += 3;\n    return data / 8388608;\n  }\n  pcm32() {\n    const data = this.dataView.getInt32(this.pos, true);\n    this.pos += 4;\n    return data < 0 ? data / 2147483648 : data / 2147483647;\n  }\n  pcm32s() {\n    const data = this.dataView.getInt32(this.pos, true);\n    this.pos += 4;\n    return data / 2147483648;\n  }\n  pcm32f() {\n    const data = this.dataView.getFloat32(this.pos, true);\n    this.pos += 4;\n    return data;\n  }\n  pcm64f() {\n    const data = this.dataView.getFloat64(this.pos, true);\n    this.pos += 8;\n    return data;\n  }\n};\nvar WavDecoder_default = WavDecoder;\n\n// src/SoundfileReader.ts\nvar SoundfileReader = class {\n  // Set the fallback paths\n  static get fallbackPaths() {\n    return [location.href, this.getParentUrl(location.href), location.origin];\n  }\n  /**\n   * Extract the parent URL from an URL.\n   * @param url : the URL\n   * @returns : the parent URL\n   */\n  static getParentUrl(url) {\n    return url.substring(0, url.lastIndexOf(\"/\") + 1);\n  }\n  /**\n   * Convert an audio buffer to audio data.\n   * \n   * @param audioBuffer : the audio buffer to convert\n   * @returns : the audio data\n   */\n  static toAudioData(audioBuffer) {\n    const { sampleRate, numberOfChannels } = audioBuffer;\n    return {\n      sampleRate,\n      audioBuffer: new Array(numberOfChannels).fill(null).map((v, i) => audioBuffer.getChannelData(i))\n    };\n  }\n  /**\n   * Extract the URLs from the metadata.\n   * \n   * @param dspMeta : the metadata\n   * @returns : the URLs\n   */\n  static findSoundfilesFromMeta(dspMeta) {\n    const soundfiles = {};\n    const callback = (item) => {\n      if (item.type === \"soundfile\") {\n        const urls = FaustBaseWebAudioDsp.splitSoundfileNames(item.url);\n        urls.forEach((url) => soundfiles[url] = null);\n      }\n    };\n    FaustBaseWebAudioDsp.parseUI(dspMeta.ui, callback);\n    return soundfiles;\n  }\n  /**\n   * Check if the file exists.\n   * \n   * @param url : the url of the file to check\n   * @returns : true if the file exists, otherwise false\n   */\n  static async checkFileExists(url) {\n    try {\n      console.log(`\"checkFileExists\" url: ${url}`);\n      const response = await fetch(url);\n      console.log(`\"checkFileExists\" response.ok: ${response.ok}`);\n      return response.ok;\n    } catch (error) {\n      console.error(\"Fetch error:\", error);\n      return false;\n    }\n  }\n  /**\n   * Fetch the soundfile.\n   * \n   * @param url : the url of the soundfile\n   * @param audioCtx : the audio context\n   * @returns : the audio data\n   */\n  static async fetchSoundfile(url, audioCtx) {\n    console.log(`Loading sound file from ${url}`);\n    const response = await fetch(url);\n    if (!response.ok)\n      throw new Error(`Failed to load sound file from ${url}: ${response.statusText}`);\n    const arrayBuffer = await response.arrayBuffer();\n    const audioBuffer = await audioCtx.decodeAudioData(arrayBuffer);\n    return this.toAudioData(audioBuffer);\n  }\n  /**\n   * Load the soundfile.\n   * \n   * @param filename : the filename\n   * @param metaUrls : the metadata URLs\n   * @param soundfiles : the soundfiles\n   * @param audioCtx : the audio context\n   */\n  static async loadSoundfile(filename, metaUrls, soundfiles, audioCtx) {\n    if (soundfiles[filename])\n      return;\n    const urlsToCheck = [filename, ...[...metaUrls, ...this.fallbackPaths].map((path) => new URL(filename, path.endsWith(\"/\") ? path : `${path}/`).href)];\n    const checkResults = await Promise.all(urlsToCheck.map((url) => this.checkFileExists(url)));\n    const successIndex = checkResults.findIndex((r) => !!r);\n    if (successIndex === -1)\n      throw new Error(`Failed to load sound file ${filename}, all check failed.`);\n    soundfiles[filename] = await this.fetchSoundfile(urlsToCheck[successIndex], audioCtx);\n  }\n  /**\n   * Load the soundfiles, public API.\n   * \n   * @param dspMeta : the metadata\n   * @param soundfilesIn : the soundfiles\n   * @param audioCtx : the audio context\n   * @returns : the soundfiles\n   */\n  static async loadSoundfiles(dspMeta, soundfilesIn, audioCtx) {\n    const metaUrls = FaustBaseWebAudioDsp.extractUrlsFromMeta(dspMeta);\n    const soundfiles = this.findSoundfilesFromMeta(dspMeta);\n    for (const id in soundfiles) {\n      if (soundfilesIn[id]) {\n        soundfiles[id] = soundfilesIn[id];\n        continue;\n      }\n      try {\n        await this.loadSoundfile(id, metaUrls, soundfiles, audioCtx);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    return soundfiles;\n  }\n};\nvar SoundfileReader_default = SoundfileReader;\n\n// src/FaustAudioWorkletNode.ts\nvar _hasAccInput, _hasGyrInput;\nvar FaustAudioWorkletNode = class extends (globalThis.AudioWorkletNode || null) {\n  constructor(context, name, factory, options = {}) {\n    const JSONObj = JSON.parse(factory.json);\n    super(context, name, {\n      numberOfInputs: JSONObj.inputs > 0 ? 1 : 0,\n      numberOfOutputs: JSONObj.outputs > 0 ? 1 : 0,\n      channelCount: Math.max(1, JSONObj.inputs),\n      outputChannelCount: [JSONObj.outputs],\n      channelCountMode: \"explicit\",\n      channelInterpretation: \"speakers\",\n      processorOptions: options.processorOptions,\n      ...options\n    });\n    __privateAdd(this, _hasAccInput, false);\n    __privateAdd(this, _hasGyrInput, false);\n    // Public API\n    // Accelerometer and gyroscope handlers\n    this.handleDeviceMotion = ({ accelerationIncludingGravity }) => {\n      const isAndroid = /Android/i.test(navigator.userAgent);\n      if (!accelerationIncludingGravity)\n        return;\n      const { x, y, z } = accelerationIncludingGravity;\n      this.propagateAcc({ x, y, z }, isAndroid);\n    };\n    this.handleDeviceOrientation = ({ alpha, beta, gamma }) => {\n      this.propagateGyr({ alpha, beta, gamma });\n    };\n    this.fJSONDsp = JSONObj;\n    this.fJSON = factory.json;\n    this.fOutputHandler = null;\n    this.fComputeHandler = null;\n    this.fPlotHandler = null;\n    this.fDescriptor = [];\n    this.fInputsItems = [];\n    this.fUICallback = (item) => {\n      if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n        this.fInputsItems.push(item.address);\n        this.fDescriptor.push(item);\n        if (!item.meta)\n          return;\n        item.meta.forEach((meta) => {\n          const { midi, acc, gyr } = meta;\n          if (acc)\n            __privateSet(this, _hasAccInput, true);\n          if (gyr)\n            __privateSet(this, _hasGyrInput, true);\n        });\n      }\n    };\n    FaustBaseWebAudioDsp.parseUI(this.fJSONDsp.ui, this.fUICallback);\n    this.port.onmessage = (e) => {\n      if (e.data.type === \"param\" && this.fOutputHandler) {\n        this.fOutputHandler(e.data.path, e.data.value);\n      } else if (e.data.type === \"plot\" && this.fPlotHandler) {\n        this.fPlotHandler(e.data.value, e.data.index, e.data.events);\n      }\n    };\n  }\n  /** Setup accelerometer and gyroscope handlers */\n  async startSensors() {\n    if (this.hasAccInput) {\n      if (window.DeviceMotionEvent) {\n        if (typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n          try {\n            const response = await window.DeviceMotionEvent.requestPermission();\n            if (response === \"granted\") {\n              window.addEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n            } else if (response === \"denied\") {\n              alert(\"You have denied access to motion and orientation data. To enable it, go to Settings > Safari > Motion & Orientation Access.\");\n              throw new Error(\"Unable to access the accelerometer.\");\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        } else {\n          window.addEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n        }\n      } else {\n        console.log(\"Cannot set the accelerometer handler.\");\n      }\n    }\n    if (this.hasGyrInput) {\n      if (window.DeviceMotionEvent) {\n        if (typeof window.DeviceOrientationEvent.requestPermission === \"function\") {\n          try {\n            const response = await window.DeviceOrientationEvent.requestPermission();\n            if (response === \"granted\") {\n              window.addEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n            } else if (response === \"denied\") {\n              alert(\"You have denied access to motion and orientation data. To enable it, go to Settings > Safari > Motion & Orientation Access.\");\n              throw new Error(\"Unable to access the gyroscope.\");\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        } else {\n          window.addEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n        }\n      } else {\n        console.log(\"Cannot set the gyroscope handler.\");\n      }\n    }\n  }\n  stopSensors() {\n    if (this.hasAccInput) {\n      window.removeEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n    }\n    if (this.hasGyrInput) {\n      window.removeEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n    }\n  }\n  setOutputParamHandler(handler) {\n    this.fOutputHandler = handler;\n  }\n  getOutputParamHandler() {\n    return this.fOutputHandler;\n  }\n  setComputeHandler(handler) {\n    this.fComputeHandler = handler;\n  }\n  getComputeHandler() {\n    return this.fComputeHandler;\n  }\n  setPlotHandler(handler) {\n    this.fPlotHandler = handler;\n    if (this.fPlotHandler) {\n      this.port.postMessage({ type: \"setPlotHandler\", data: true });\n    } else {\n      this.port.postMessage({ type: \"setPlotHandler\", data: false });\n    }\n  }\n  getPlotHandler() {\n    return this.fPlotHandler;\n  }\n  setupWamEventHandler() {\n    this.port.postMessage({ type: \"setupWamEventHandler\" });\n  }\n  getNumInputs() {\n    return this.fJSONDsp.inputs;\n  }\n  getNumOutputs() {\n    return this.fJSONDsp.outputs;\n  }\n  // Implemented in subclasses\n  compute(inputs, outputs) {\n    return false;\n  }\n  metadata(handler) {\n    if (this.fJSONDsp.meta) {\n      this.fJSONDsp.meta.forEach((meta) => handler(Object.keys(meta)[0], meta[Object.keys(meta)[0]]));\n    }\n  }\n  midiMessage(data) {\n    const cmd = data[0] >> 4;\n    const channel = data[0] & 15;\n    const data1 = data[1];\n    const data2 = data[2];\n    if (cmd === 11)\n      this.ctrlChange(channel, data1, data2);\n    else if (cmd === 14)\n      this.pitchWheel(channel, data2 * 128 + data1);\n    else\n      this.port.postMessage({ type: \"midi\", data });\n  }\n  ctrlChange(channel, ctrl, value) {\n    const e = { type: \"ctrlChange\", data: [channel, ctrl, value] };\n    this.port.postMessage(e);\n  }\n  pitchWheel(channel, wheel) {\n    const e = { type: \"pitchWheel\", data: [channel, wheel] };\n    this.port.postMessage(e);\n  }\n  get hasAccInput() {\n    return __privateGet(this, _hasAccInput);\n  }\n  propagateAcc(accelerationIncludingGravity, invert = false) {\n    if (!accelerationIncludingGravity)\n      return;\n    const e = { type: \"acc\", data: accelerationIncludingGravity, invert };\n    this.port.postMessage(e);\n  }\n  get hasGyrInput() {\n    return __privateGet(this, _hasGyrInput);\n  }\n  propagateGyr(event) {\n    if (!event)\n      return;\n    const e = { type: \"gyr\", data: event };\n    this.port.postMessage(e);\n  }\n  setParamValue(path, value) {\n    const e = { type: \"param\", data: { path, value } };\n    this.port.postMessage(e);\n    const param = this.parameters.get(path);\n    if (param)\n      param.setValueAtTime(value, this.context.currentTime);\n  }\n  getParamValue(path) {\n    const param = this.parameters.get(path);\n    return param ? param.value : 0;\n  }\n  getParams() {\n    return this.fInputsItems;\n  }\n  getMeta() {\n    return this.fJSONDsp;\n  }\n  getJSON() {\n    return JSON.stringify(this.getMeta());\n  }\n  getUI() {\n    return this.fJSONDsp.ui;\n  }\n  getDescriptors() {\n    return this.fDescriptor;\n  }\n  start() {\n    this.port.postMessage({ type: \"start\" });\n  }\n  stop() {\n    this.port.postMessage({ type: \"stop\" });\n  }\n  destroy() {\n    this.port.postMessage({ type: \"destroy\" });\n    this.port.close();\n  }\n};\n_hasAccInput = new WeakMap();\n_hasGyrInput = new WeakMap();\nvar FaustMonoAudioWorkletNode = class extends FaustAudioWorkletNode {\n  constructor(context, options) {\n    super(context, options.processorOptions.name, options.processorOptions.factory, options);\n    this.onprocessorerror = (e) => {\n      throw e;\n    };\n  }\n};\nvar FaustPolyAudioWorkletNode = class extends FaustAudioWorkletNode {\n  constructor(context, options) {\n    super(\n      context,\n      options.processorOptions.name,\n      options.processorOptions.voiceFactory,\n      options\n    );\n    this.onprocessorerror = (e) => {\n      throw e;\n    };\n    this.fJSONEffect = options.processorOptions.effectFactory ? JSON.parse(options.processorOptions.effectFactory.json) : null;\n    if (this.fJSONEffect) {\n      FaustBaseWebAudioDsp.parseUI(this.fJSONEffect.ui, this.fUICallback);\n    }\n  }\n  // Public API\n  keyOn(channel, pitch, velocity) {\n    const e = { type: \"keyOn\", data: [channel, pitch, velocity] };\n    this.port.postMessage(e);\n  }\n  keyOff(channel, pitch, velocity) {\n    const e = { type: \"keyOff\", data: [channel, pitch, velocity] };\n    this.port.postMessage(e);\n  }\n  allNotesOff(hard) {\n    const e = { type: \"ctrlChange\", data: [0, 123, 0] };\n    this.port.postMessage(e);\n  }\n  getMeta() {\n    const o = this.fJSONDsp;\n    const e = this.fJSONEffect;\n    const r = { ...o };\n    if (e) {\n      r.ui = [{\n        type: \"tgroup\",\n        label: \"Sequencer\",\n        items: [\n          { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n          { type: \"vgroup\", label: \"Effect\", items: e.ui }\n        ]\n      }];\n    } else {\n      r.ui = [{\n        type: \"tgroup\",\n        label: \"Polyphonic\",\n        items: [\n          { type: \"vgroup\", label: \"Voices\", items: o.ui }\n        ]\n      }];\n    }\n    return r;\n  }\n  getJSON() {\n    return JSON.stringify(this.getMeta());\n  }\n  getUI() {\n    return this.getMeta().ui;\n  }\n};\n\n// src/FaustScriptProcessorNode.ts\nvar FaustScriptProcessorNode = class extends (globalThis.ScriptProcessorNode || null) {\n  constructor() {\n    super(...arguments);\n    this.handleDeviceMotion = void 0;\n    this.handleDeviceOrientation = void 0;\n  }\n  init(instance) {\n    this.fDSPCode = instance;\n    this.fInputs = new Array(this.fDSPCode.getNumInputs());\n    this.fOutputs = new Array(this.fDSPCode.getNumOutputs());\n    this.handleDeviceMotion = ({ accelerationIncludingGravity }) => {\n      const isAndroid = /Android/i.test(navigator.userAgent);\n      if (!accelerationIncludingGravity)\n        return;\n      const { x, y, z } = accelerationIncludingGravity;\n      this.propagateAcc({ x, y, z }, isAndroid);\n    };\n    this.handleDeviceOrientation = ({ alpha, beta, gamma }) => {\n      this.propagateGyr({ alpha, beta, gamma });\n    };\n    this.onaudioprocess = (e) => {\n      for (let chan = 0; chan < this.fDSPCode.getNumInputs(); chan++) {\n        this.fInputs[chan] = e.inputBuffer.getChannelData(chan);\n      }\n      for (let chan = 0; chan < this.fDSPCode.getNumOutputs(); chan++) {\n        this.fOutputs[chan] = e.outputBuffer.getChannelData(chan);\n      }\n      return this.fDSPCode.compute(this.fInputs, this.fOutputs);\n    };\n    this.start();\n  }\n  // Public API\n  /** Setup accelerometer and gyroscope handlers */\n  async startSensors() {\n    if (this.hasAccInput) {\n      if (window.DeviceMotionEvent) {\n        if (typeof window.DeviceMotionEvent.requestPermission === \"function\") {\n          try {\n            const response = await window.DeviceMotionEvent.requestPermission();\n            if (response === \"granted\") {\n              window.addEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n            } else if (response === \"denied\") {\n              alert(\"You have denied access to motion and orientation data. To enable it, go to Settings > Safari > Motion & Orientation Access.\");\n              throw new Error(\"Unable to access the accelerometer.\");\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        } else {\n          window.addEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n        }\n      } else {\n        console.log(\"Cannot set the accelerometer handler.\");\n      }\n    }\n    if (this.hasGyrInput) {\n      if (window.DeviceMotionEvent) {\n        if (typeof window.DeviceOrientationEvent.requestPermission === \"function\") {\n          try {\n            const response = await window.DeviceOrientationEvent.requestPermission();\n            if (response === \"granted\") {\n              window.addEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n            } else if (response === \"denied\") {\n              alert(\"You have denied access to motion and orientation data. To enable it, go to Settings > Safari > Motion & Orientation Access.\");\n              throw new Error(\"Unable to access the gyroscope.\");\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        } else {\n          window.addEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n        }\n      } else {\n        console.log(\"Cannot set the gyroscope handler.\");\n      }\n    }\n  }\n  stopSensors() {\n    if (this.hasAccInput) {\n      window.removeEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n    }\n    if (this.hasGyrInput) {\n      window.removeEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n    }\n  }\n  compute(input, output) {\n    return this.fDSPCode.compute(input, output);\n  }\n  setOutputParamHandler(handler) {\n    this.fDSPCode.setOutputParamHandler(handler);\n  }\n  getOutputParamHandler() {\n    return this.fDSPCode.getOutputParamHandler();\n  }\n  setComputeHandler(handler) {\n    this.fDSPCode.setComputeHandler(handler);\n  }\n  getComputeHandler() {\n    return this.fDSPCode.getComputeHandler();\n  }\n  setPlotHandler(handler) {\n    this.fDSPCode.setPlotHandler(handler);\n  }\n  getPlotHandler() {\n    return this.fDSPCode.getPlotHandler();\n  }\n  getNumInputs() {\n    return this.fDSPCode.getNumInputs();\n  }\n  getNumOutputs() {\n    return this.fDSPCode.getNumOutputs();\n  }\n  metadata(handler) {\n  }\n  midiMessage(data) {\n    this.fDSPCode.midiMessage(data);\n  }\n  ctrlChange(chan, ctrl, value) {\n    this.fDSPCode.ctrlChange(chan, ctrl, value);\n  }\n  pitchWheel(chan, value) {\n    this.fDSPCode.pitchWheel(chan, value);\n  }\n  setParamValue(path, value) {\n    this.fDSPCode.setParamValue(path, value);\n  }\n  getParamValue(path) {\n    return this.fDSPCode.getParamValue(path);\n  }\n  getParams() {\n    return this.fDSPCode.getParams();\n  }\n  getMeta() {\n    return this.fDSPCode.getMeta();\n  }\n  getJSON() {\n    return this.fDSPCode.getJSON();\n  }\n  getDescriptors() {\n    return this.fDSPCode.getDescriptors();\n  }\n  getUI() {\n    return this.fDSPCode.getUI();\n  }\n  start() {\n    this.fDSPCode.start();\n  }\n  stop() {\n    this.fDSPCode.stop();\n  }\n  destroy() {\n    this.fDSPCode.destroy();\n  }\n  get hasAccInput() {\n    return this.fDSPCode.hasAccInput;\n  }\n  propagateAcc(accelerationIncludingGravity, invert = false) {\n    this.fDSPCode.propagateAcc(accelerationIncludingGravity, invert);\n  }\n  get hasGyrInput() {\n    return this.fDSPCode.hasGyrInput;\n  }\n  propagateGyr(event) {\n    this.fDSPCode.propagateGyr(event);\n  }\n};\nvar FaustMonoScriptProcessorNode = class extends FaustScriptProcessorNode {\n};\nvar FaustPolyScriptProcessorNode = class extends FaustScriptProcessorNode {\n  keyOn(channel, pitch, velocity) {\n    this.fDSPCode.keyOn(channel, pitch, velocity);\n  }\n  keyOff(channel, pitch, velocity) {\n    this.fDSPCode.keyOff(channel, pitch, velocity);\n  }\n  allNotesOff(hard) {\n    this.fDSPCode.allNotesOff(hard);\n  }\n};\n\n// src/FaustDspGenerator.ts\nvar _FaustMonoDspGenerator = class _FaustMonoDspGenerator {\n  constructor() {\n    this.factory = null;\n  }\n  async compile(compiler, name, code, args) {\n    this.factory = await compiler.createMonoDSPFactory(name, code, args);\n    if (this.factory) {\n      this.name = name;\n      return this;\n    } else {\n      return null;\n    }\n  }\n  addSoundfiles(soundfileMap) {\n    if (!this.factory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    for (const id in soundfileMap) {\n      this.factory.soundfiles[id] = soundfileMap[id];\n    }\n  }\n  getSoundfileList() {\n    if (!this.factory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    const meta = JSON.parse(this.factory.json);\n    const map = SoundfileReader_default.findSoundfilesFromMeta(meta);\n    return Object.keys(map);\n  }\n  async createNode(context, name = this.name, factory = this.factory, sp = false, bufferSize = 1024, processorName = (factory == null ? void 0 : factory.shaKey) || name, processorOptions = {}) {\n    var _a, _b;\n    if (!factory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    const meta = JSON.parse(factory.json);\n    const sampleSize = meta.compile_options.match(\"-double\") ? 8 : 4;\n    factory.soundfiles = await SoundfileReader_default.loadSoundfiles(meta, factory.soundfiles || {}, context);\n    if (sp) {\n      const instance = await FaustWasmInstantiator_default.createAsyncMonoDSPInstance(factory);\n      const monoDsp = new FaustMonoWebAudioDsp(instance, context.sampleRate, sampleSize, bufferSize, factory.soundfiles);\n      const sp2 = context.createScriptProcessor(bufferSize, monoDsp.getNumInputs(), monoDsp.getNumOutputs());\n      Object.setPrototypeOf(sp2, FaustMonoScriptProcessorNode.prototype);\n      sp2.init(monoDsp);\n      return sp2;\n    } else {\n      if (!_FaustMonoDspGenerator.gWorkletProcessors.has(context))\n        _FaustMonoDspGenerator.gWorkletProcessors.set(context, /* @__PURE__ */ new Set());\n      if (!((_a = _FaustMonoDspGenerator.gWorkletProcessors.get(context)) == null ? void 0 : _a.has(processorName))) {\n        try {\n          const processorCode = `\n// DSP name and JSON string for DSP are generated\nconst faustData = ${JSON.stringify({\n            processorName,\n            dspName: name,\n            dspMeta: meta,\n            poly: false\n          })};\n// Implementation needed classes of functions\nvar ${FaustDspInstance.name} = ${FaustDspInstance.toString()}\nvar FaustDspInstance = ${FaustDspInstance.name};\nvar ${FaustBaseWebAudioDsp.name} = ${FaustBaseWebAudioDsp.toString()}\nvar FaustBaseWebAudioDsp = ${FaustBaseWebAudioDsp.name};\nvar ${FaustMonoWebAudioDsp.name} = ${FaustMonoWebAudioDsp.toString()}\nvar FaustMonoWebAudioDsp = ${FaustMonoWebAudioDsp.name};\nvar ${FaustWasmInstantiator_default.name} = ${FaustWasmInstantiator_default.toString()}\nvar FaustWasmInstantiator = ${FaustWasmInstantiator_default.name};\nvar ${Soundfile.name} = ${Soundfile.toString()}\nvar Soundfile = ${Soundfile.name};\nvar ${WasmAllocator.name} = ${WasmAllocator.toString()}\nvar WasmAllocator = ${WasmAllocator.name};\nvar ${FaustSensors.name} = ${FaustSensors.toString()}\nvar FaustSensors = ${FaustSensors.name};\n// Put them in dependencies\nconst dependencies = {\n    FaustBaseWebAudioDsp,\n    FaustMonoWebAudioDsp,\n    FaustWasmInstantiator\n};\n// Generate the actual AudioWorkletProcessor code\n(${FaustAudioWorkletProcessor_default.toString()})(dependencies, faustData);\n`;\n          const url = URL.createObjectURL(new Blob([processorCode], { type: \"text/javascript\" }));\n          await context.audioWorklet.addModule(url);\n          (_b = _FaustMonoDspGenerator.gWorkletProcessors.get(context)) == null ? void 0 : _b.add(processorName);\n        } catch (e) {\n          throw e;\n        }\n      }\n      const node = new FaustMonoAudioWorkletNode(context, { processorOptions: { name: processorName, factory, sampleSize, ...processorOptions } });\n      return node;\n    }\n  }\n  async createFFTNode(context, fftUtils, name = this.name, factory = this.factory, fftOptions = {}, processorName = (factory == null ? void 0 : factory.shaKey) ? `${factory.shaKey}_fft` : name, processorOptions = {}) {\n    var _a, _b;\n    if (!factory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    const meta = JSON.parse(factory.json);\n    const sampleSize = meta.compile_options.match(\"-double\") ? 8 : 4;\n    factory.soundfiles = await SoundfileReader_default.loadSoundfiles(meta, factory.soundfiles || {}, context);\n    if (!_FaustMonoDspGenerator.gWorkletProcessors.has(context))\n      _FaustMonoDspGenerator.gWorkletProcessors.set(context, /* @__PURE__ */ new Set());\n    if (!((_a = _FaustMonoDspGenerator.gWorkletProcessors.get(context)) == null ? void 0 : _a.has(processorName))) {\n      try {\n        const processorCode = `\n// DSP name and JSON string for DSP are generated\nconst faustData = ${JSON.stringify({\n          processorName,\n          dspName: name,\n          dspMeta: meta,\n          fftOptions\n        })};\n// Implementation needed classes of functions\nvar ${FaustDspInstance.name} = ${FaustDspInstance.toString()}\nvar FaustDspInstance = ${FaustDspInstance.name};\nvar ${FaustBaseWebAudioDsp.name} = ${FaustBaseWebAudioDsp.toString()}\nvar FaustBaseWebAudioDsp = ${FaustBaseWebAudioDsp.name};\nvar ${FaustMonoWebAudioDsp.name} = ${FaustMonoWebAudioDsp.toString()}\nvar FaustMonoWebAudioDsp = ${FaustMonoWebAudioDsp.name};\nvar ${FaustWasmInstantiator_default.name} = ${FaustWasmInstantiator_default.toString()}\nvar FaustWasmInstantiator = ${FaustWasmInstantiator_default.name};\nvar ${Soundfile.name} = ${Soundfile.toString()}\nvar Soundfile = ${Soundfile.name};\nvar ${WasmAllocator.name} = ${WasmAllocator.toString()}\nvar WasmAllocator = ${WasmAllocator.name};\nvar ${FaustSensors.name} = ${FaustSensors.toString()}\nvar FaustSensors = ${FaustSensors.name};\nvar FFTUtils = ${fftUtils.toString()}\n// Put them in dependencies\nconst dependencies = {\n    FaustBaseWebAudioDsp,\n    FaustMonoWebAudioDsp,\n    FaustWasmInstantiator,\n    FFTUtils\n};\n// Generate the actual AudioWorkletProcessor code\n(${FaustFFTAudioWorkletProcessor_default.toString()})(dependencies, faustData);\n`;\n        const url = URL.createObjectURL(new Blob([processorCode], { type: \"text/javascript\" }));\n        await context.audioWorklet.addModule(url);\n        (_b = _FaustMonoDspGenerator.gWorkletProcessors.get(context)) == null ? void 0 : _b.add(processorName);\n      } catch (e) {\n        throw e;\n      }\n    }\n    const node = new FaustMonoAudioWorkletNode(context, { channelCount: Math.max(1, Math.ceil(meta.inputs / 3)), outputChannelCount: [Math.ceil(meta.outputs / 2)], processorOptions: { name: processorName, factory, sampleSize, ...processorOptions } });\n    if (fftOptions.fftSize) {\n      const param = node.parameters.get(\"fftSize\");\n      if (param)\n        param.value = fftOptions.fftSize;\n    }\n    if (fftOptions.fftOverlap) {\n      const param = node.parameters.get(\"fftOverlap\");\n      if (param)\n        param.value = fftOptions.fftOverlap;\n    }\n    if (typeof fftOptions.defaultWindowFunction === \"number\") {\n      const param = node.parameters.get(\"windowFunction\");\n      if (param)\n        param.value = fftOptions.defaultWindowFunction + 1;\n    }\n    if (typeof fftOptions.noIFFT === \"boolean\") {\n      const param = node.parameters.get(\"noIFFT\");\n      if (param)\n        param.value = +fftOptions.noIFFT;\n    }\n    return node;\n  }\n  async createAudioWorkletProcessor(name = this.name, factory = this.factory, processorName = (factory == null ? void 0 : factory.shaKey) || name) {\n    if (!factory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    const meta = JSON.parse(factory.json);\n    const dependencies = {\n      FaustBaseWebAudioDsp,\n      FaustMonoWebAudioDsp,\n      FaustWasmInstantiator: FaustWasmInstantiator_default,\n      FaustPolyWebAudioDsp: void 0,\n      FaustWebAudioDspVoice: void 0\n    };\n    try {\n      const faustData = {\n        processorName,\n        dspName: name,\n        dspMeta: meta,\n        poly: false\n      };\n      const Processor = FaustAudioWorkletProcessor_default(dependencies, faustData);\n      return Processor;\n    } catch (e) {\n      throw e;\n    }\n  }\n  async createOfflineProcessor(sampleRate, bufferSize, factory = this.factory, context) {\n    if (!factory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    const meta = JSON.parse(factory.json);\n    const instance = await FaustWasmInstantiator_default.createAsyncMonoDSPInstance(factory);\n    const sampleSize = meta.compile_options.match(\"-double\") ? 8 : 4;\n    if (context)\n      factory.soundfiles = await SoundfileReader_default.loadSoundfiles(meta, factory.soundfiles || {}, context);\n    const monoDsp = new FaustMonoWebAudioDsp(instance, sampleRate, sampleSize, bufferSize, factory.soundfiles);\n    return new FaustMonoOfflineProcessor(monoDsp, bufferSize);\n  }\n  getMeta() {\n    return JSON.parse(this.factory.json);\n  }\n  getJSON() {\n    return JSON.stringify(this.getMeta());\n  }\n  getUI() {\n    return this.getMeta().ui;\n  }\n};\n// Set of all created WorkletProcessors, each of them has to be unique\n_FaustMonoDspGenerator.gWorkletProcessors = /* @__PURE__ */ new Map();\nvar FaustMonoDspGenerator = _FaustMonoDspGenerator;\nvar _FaustPolyDspGenerator = class _FaustPolyDspGenerator {\n  constructor() {\n    this.voiceFactory = null;\n    this.effectFactory = null;\n  }\n  async compile(compiler, name, dspCodeAux, args, effectCodeAux = `dsp_code = environment{\n                ${dspCodeAux}\n            };\n            process = dsp_code.effect;`) {\n    try {\n      this.effectFactory = await compiler.createPolyDSPFactory(name, effectCodeAux, args);\n      if (this.effectFactory) {\n        const effectJSON = JSON.parse(this.effectFactory.json);\n        const dspCode = `// Voice output is forced to 2, when DSP is stereo or effect has 2 ins or 2 outs,\n// so that the effect can process the 2 channels of the voice\nadaptOut(1,1,1) = _;\nadaptOut(1,1,2) = _ <: _,0;  // The left channel only is kept\nadaptOut(1,2,1) = _ <: _,_;\nadaptOut(1,2,2) = _ <: _,_;\nadaptOut(2,1,1) = _,_;\nadaptOut(2,1,2) = _,_;\nadaptOut(2,2,1) = _,_;\nadaptOut(2,2,2) = _,_;\nadaptor(F) = adaptOut(outputs(F),${effectJSON.inputs},${effectJSON.outputs});\ndsp_code = environment{\n    ${dspCodeAux}\n};\nprocess = dsp_code.process : adaptor(dsp_code.process);\n`;\n        const effectCode = `// Inputs\nadaptIn(1,1,1) = _;\nadaptIn(1,1,2) = _,_ :> _;  \nadaptIn(1,2,1) = _,_;\nadaptIn(1,2,2) = _,_;\nadaptIn(2,1,1) = _,_ :> _;\nadaptIn(2,1,2) = _,_ :> _;\nadaptIn(2,2,1) = _,_;\nadaptIn(2,2,2) = _,_;\n// Outputs\nadaptOut(1,1) = _ <: _,0;   // The left channel only is kept\nadaptOut(1,2) = _,_;\nadaptOut(2,1) = _ <: _,0;   // The left channel only is kept\nadaptOut(2,2) = _,_;\nadaptorIns(F) = adaptIn(outputs(F),${effectJSON.inputs},${effectJSON.outputs});\nadaptorOuts = adaptOut(${effectJSON.inputs},${effectJSON.outputs});\ndsp_code = environment{\n    ${dspCodeAux}\n};\nprocess = adaptorIns(dsp_code.process) : dsp_code.effect : adaptorOuts;\n`;\n        this.voiceFactory = await compiler.createPolyDSPFactory(name, dspCode, args);\n        try {\n          this.effectFactory = await compiler.createPolyDSPFactory(name, effectCode, args + \" -inpl\");\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    } catch (e) {\n      console.warn(e);\n      this.voiceFactory = await compiler.createPolyDSPFactory(name, dspCodeAux, args);\n    }\n    if (this.voiceFactory) {\n      this.name = name;\n      const voiceMeta = JSON.parse(this.voiceFactory.json);\n      const isDouble = voiceMeta.compile_options.match(\"-double\");\n      const { mixerBuffer, mixerModule } = await compiler.getAsyncInternalMixerModule(!!isDouble);\n      this.mixerBuffer = mixerBuffer;\n      this.mixerModule = mixerModule;\n      return this;\n    } else {\n      return null;\n    }\n  }\n  addSoundfiles(soundfileMap) {\n    if (!this.voiceFactory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    for (const id in soundfileMap) {\n      this.voiceFactory.soundfiles[id] = soundfileMap[id];\n    }\n  }\n  getSoundfileList() {\n    if (!this.voiceFactory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    const meta = JSON.parse(this.voiceFactory.json);\n    const map = SoundfileReader_default.findSoundfilesFromMeta(meta);\n    if (!this.effectFactory)\n      return Object.keys(map);\n    const effectMeta = JSON.parse(this.effectFactory.json);\n    const effectMap = SoundfileReader_default.findSoundfilesFromMeta(effectMeta);\n    return Object.keys({ ...effectMap, ...map });\n  }\n  async createNode(context, voices, name = this.name, voiceFactory = this.voiceFactory, mixerModule = this.mixerModule, effectFactory = this.effectFactory, sp = false, bufferSize = 1024, processorName = ((voiceFactory == null ? void 0 : voiceFactory.shaKey) || \"\") + ((effectFactory == null ? void 0 : effectFactory.shaKey) || \"\") || `${name}_poly`, processorOptions = {}) {\n    var _a, _b;\n    if (!voiceFactory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    const voiceMeta = JSON.parse(voiceFactory.json);\n    const effectMeta = effectFactory ? JSON.parse(effectFactory.json) : void 0;\n    const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n    voiceFactory.soundfiles = await SoundfileReader_default.loadSoundfiles(voiceMeta, voiceFactory.soundfiles || {}, context);\n    if (effectFactory)\n      effectFactory.soundfiles = await SoundfileReader_default.loadSoundfiles(effectMeta, effectFactory.soundfiles || {}, context);\n    if (sp) {\n      const instance = await FaustWasmInstantiator_default.createAsyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory || void 0);\n      const soundfiles = { ...effectFactory == null ? void 0 : effectFactory.soundfiles, ...voiceFactory.soundfiles };\n      const polyDsp = new FaustPolyWebAudioDsp(instance, context.sampleRate, sampleSize, bufferSize, soundfiles);\n      const sp2 = context.createScriptProcessor(bufferSize, polyDsp.getNumInputs(), polyDsp.getNumOutputs());\n      Object.setPrototypeOf(sp2, FaustPolyScriptProcessorNode.prototype);\n      sp2.init(polyDsp);\n      return sp2;\n    } else {\n      if (!_FaustPolyDspGenerator.gWorkletProcessors.has(context))\n        _FaustPolyDspGenerator.gWorkletProcessors.set(context, /* @__PURE__ */ new Set());\n      if (!((_a = _FaustPolyDspGenerator.gWorkletProcessors.get(context)) == null ? void 0 : _a.has(processorName))) {\n        try {\n          const processorCode = `\n// DSP name and JSON string for DSP are generated\nconst faustData = ${JSON.stringify({\n            processorName,\n            dspName: name,\n            dspMeta: voiceMeta,\n            poly: true,\n            effectMeta\n          })};\n// Implementation needed classes of functions\nvar ${FaustDspInstance.name} = ${FaustDspInstance.toString()}\nvar FaustDspInstance = ${FaustDspInstance.name};\nvar ${FaustBaseWebAudioDsp.name} = ${FaustBaseWebAudioDsp.toString()}\nvar FaustBaseWebAudioDsp = ${FaustBaseWebAudioDsp.name};\nvar ${FaustPolyWebAudioDsp.name} = ${FaustPolyWebAudioDsp.toString()}\nvar FaustPolyWebAudioDsp = ${FaustPolyWebAudioDsp.name};\nvar ${FaustWebAudioDspVoice.name} = ${FaustWebAudioDspVoice.toString()}\nvar FaustWebAudioDspVoice = ${FaustWebAudioDspVoice.name};\nvar ${FaustWasmInstantiator_default.name} = ${FaustWasmInstantiator_default.toString()}\nvar FaustWasmInstantiator = ${FaustWasmInstantiator_default.name};\nvar ${Soundfile.name} = ${Soundfile.toString()}\nvar Soundfile = ${Soundfile.name};\nvar ${WasmAllocator.name} = ${WasmAllocator.toString()}\nvar WasmAllocator = ${WasmAllocator.name};\nvar ${FaustSensors.name} = ${FaustSensors.toString()}\nvar FaustSensors = ${FaustSensors.name};\n// Put them in dependencies\nconst dependencies = {\n    FaustBaseWebAudioDsp,\n    FaustPolyWebAudioDsp,\n    FaustWasmInstantiator\n};\n// Generate the actual AudioWorkletProcessor code\n(${FaustAudioWorkletProcessor_default.toString()})(dependencies, faustData);\n`;\n          const url = URL.createObjectURL(new Blob([processorCode], { type: \"text/javascript\" }));\n          await context.audioWorklet.addModule(url);\n          (_b = _FaustPolyDspGenerator.gWorkletProcessors.get(context)) == null ? void 0 : _b.add(processorName);\n        } catch (e) {\n          throw e;\n        }\n      }\n      const node = new FaustPolyAudioWorkletNode(context, { processorOptions: { name: processorName, voiceFactory, mixerModule, voices, sampleSize, effectFactory: effectFactory || void 0, ...processorOptions } });\n      return node;\n    }\n  }\n  async createAudioWorkletProcessor(name = this.name, voiceFactory = this.voiceFactory, effectFactory = this.effectFactory, processorName = ((voiceFactory == null ? void 0 : voiceFactory.shaKey) || \"\") + ((effectFactory == null ? void 0 : effectFactory.shaKey) || \"\") || `${name}_poly`) {\n    if (!voiceFactory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    const voiceMeta = JSON.parse(voiceFactory.json);\n    const effectMeta = effectFactory ? JSON.parse(effectFactory.json) : void 0;\n    const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n    try {\n      const dependencies = {\n        FaustBaseWebAudioDsp,\n        FaustMonoWebAudioDsp: void 0,\n        FaustWasmInstantiator: FaustWasmInstantiator_default,\n        FaustPolyWebAudioDsp,\n        FaustWebAudioDspVoice\n      };\n      const faustData = {\n        processorName,\n        dspName: name,\n        dspMeta: voiceMeta,\n        poly: true,\n        effectMeta\n      };\n      const Processor = FaustAudioWorkletProcessor_default(dependencies, faustData);\n      return Processor;\n    } catch (e) {\n      throw e;\n    }\n  }\n  async createOfflineProcessor(sampleRate, bufferSize, voices, voiceFactory = this.voiceFactory, mixerModule = this.mixerModule, effectFactory = this.effectFactory, context) {\n    if (!voiceFactory)\n      throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n    const voiceMeta = JSON.parse(voiceFactory.json);\n    const effectMeta = effectFactory ? JSON.parse(effectFactory.json) : void 0;\n    const instance = await FaustWasmInstantiator_default.createAsyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory || void 0);\n    const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n    if (context) {\n      voiceFactory.soundfiles = await SoundfileReader_default.loadSoundfiles(voiceMeta, voiceFactory.soundfiles || {}, context);\n      if (effectFactory)\n        effectFactory.soundfiles = await SoundfileReader_default.loadSoundfiles(effectMeta, effectFactory.soundfiles || {}, context);\n    }\n    const soundfiles = { ...effectFactory == null ? void 0 : effectFactory.soundfiles, ...voiceFactory.soundfiles };\n    const polyDsp = new FaustPolyWebAudioDsp(instance, sampleRate, sampleSize, bufferSize, soundfiles);\n    return new FaustPolyOfflineProcessor(polyDsp, bufferSize);\n  }\n  getMeta() {\n    const o = this.voiceFactory ? JSON.parse(this.voiceFactory.json) : null;\n    const e = this.effectFactory ? JSON.parse(this.effectFactory.json) : null;\n    const r = { ...o };\n    if (e) {\n      r.ui = [{\n        type: \"tgroup\",\n        label: \"Sequencer\",\n        items: [\n          { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n          { type: \"vgroup\", label: \"Effect\", items: e.ui }\n        ]\n      }];\n    } else {\n      r.ui = [{\n        type: \"tgroup\",\n        label: \"Polyphonic\",\n        items: [\n          { type: \"vgroup\", label: \"Voices\", items: o.ui }\n        ]\n      }];\n    }\n    return r;\n  }\n  getJSON() {\n    return JSON.stringify(this.getMeta());\n  }\n  getUI() {\n    return this.getMeta().ui;\n  }\n};\n// Set of all created WorkletProcessors, each of them has to be unique\n_FaustPolyDspGenerator.gWorkletProcessors = /* @__PURE__ */ new Map();\nvar FaustPolyDspGenerator = _FaustPolyDspGenerator;\nexport {\n  FaustAudioWorkletNode,\n  FaustBaseWebAudioDsp,\n  FaustCmajor_default as FaustCmajor,\n  FaustCompiler_default as FaustCompiler,\n  FaustDspInstance,\n  FaustMonoAudioWorkletNode,\n  FaustMonoDspGenerator,\n  FaustMonoOfflineProcessor,\n  FaustMonoScriptProcessorNode,\n  FaustMonoWebAudioDsp,\n  FaustOfflineProcessor_default as FaustOfflineProcessor,\n  FaustPolyAudioWorkletNode,\n  FaustPolyDspGenerator,\n  FaustPolyOfflineProcessor,\n  FaustPolyScriptProcessorNode,\n  FaustPolyWebAudioDsp,\n  FaustScriptProcessorNode,\n  FaustSvgDiagrams_default as FaustSvgDiagrams,\n  FaustWasmInstantiator_default as FaustWasmInstantiator,\n  FaustWebAudioDspVoice,\n  LibFaust_default as LibFaust,\n  Soundfile,\n  SoundfileReader_default as SoundfileReader,\n  WasmAllocator,\n  WavDecoder_default as WavDecoder,\n  WavEncoder_default as WavEncoder,\n  ab2str,\n  FaustAudioWorkletProcessor_default as getFaustAudioWorkletProcessor,\n  FaustFFTAudioWorkletProcessor_default as getFaustFFTAudioWorkletProcessor,\n  instantiateFaustModuleFromFile_default as instantiateFaustModuleFromFile,\n  str2ab\n};\n//# sourceMappingURL=index.js.map\n",
    "import { instantiateFaustModuleFromFile, LibFaust, FaustCompiler, FaustMonoDspGenerator } from '@grame/faustwasm/dist/esm/index'\nconst root = globalThis as any;\nroot.window = globalThis;\nself.onmessage = async function (event) {\n\ttry {\n\t\tconst data = event.data;\n\t\tconst content = data.content;\n\t\tconst target = data.target;\n\t\tconst faustModuleUrl = data.faustModuleUrl\n\t\tconst filename = data.filename;\n\t\tconst faustModule = await instantiateFaustModuleFromFile(faustModuleUrl as any);\n\t\tconst libFaust = new LibFaust(faustModule as any);\n\t\troot.libFaust = libFaust;\n\t\tconst compiler = new FaustCompiler(libFaust);\n\t\tconst name = filename.split('/').at(-1)!.split('.')[0].trim();\n\t\tif (target == 'cmajor') {\n\t\t\tif (!compiler.generateAuxFiles(name, content, \"-lang cmajor-hybrid -cn \" + name + \" -o foo.cmajor\")) throw new Error('Ooops')\n\t\t\tself.postMessage(compiler.fs().readFile('foo.cmajor', { encoding: \"utf8\" }));\n\t\t} else {\n\t\t\tconst generator = new FaustMonoDspGenerator();\n\t\t\tawait generator.compile(compiler, name, content, \"-lang wasm-i -json -ct 1 -es 1 -mcd 16 -mdd 1024 -mdy 33 -single -ftz 2\");\n\t\t\tconst bytes = generator.factory!.code;\n\t\t\tconst json = JSON.parse(generator.factory!.json);\n\t\t\tconst base64 = btoa(String.fromCharCode(...bytes));\n\t\t\tself.postMessage({ wasm: base64, json });\n\t\t}\n\t} catch (e: any) {\n\t\tself.postMessage({ error: e.message });\n\t}\n}"
  ],
  "mappings": "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",
  "debugId": "C6AE829DA67FEA1464756E2164756E21",
  "names": []
}